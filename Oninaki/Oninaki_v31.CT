<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Oninaki (Steam Edition)"</Description>
      <Options moHideChildren="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Enable"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{$lua}
LaunchMonoDataCollector()

mono_compile_method(mono_getJitInfo(getAddress('Rinne:UIPlayerInfoWindow:Initialize')).method)
mono_compile_method(mono_getJitInfo(getAddress('Rinne:UiPlayerInfo:GetExp')).method)
mono_compile_method(mono_getJitInfo(getAddress('Rinne:UiWeapondetailInfoContent:SetWeaponData')).method)
mono_compile_method(mono_getJitInfo(getAddress('Rinne:PersistentData:GetItem')).method)
{$asm}		  

///
aobscanregion(GetExpAOB,Rinne:UiPlayerInfo:GetExp,Rinne:UiPlayerInfo:GetExp+62,41 FF D3 48 85 C0 75 04 33 C0 EB 2D)
registersymbol(GetExpAOB)
alloc(newmem,1024,Rinne:UiPlayerInfo:GetExp)

///
aobscanregion(UIPlayerInfoWindowInitializeAOB,Rinne:UIPlayerInfoWindow:Initialize,Rinne:UIPlayerInfoWindow:Initialize+309,41 FF D3 85 C0 0F 84 65 00 00 00)
registersymbol(UIPlayerInfoWindowInitializeAOB)
alloc(newmem2,1024,Rinne:UIPlayerInfoWindow:Initialize)

///
aobscanregion(UIWeaponDetailInfoContentAOB,Rinne:UiWeaponDetailInfoContent:SetWeaponData,Rinne:UiWeaponDetailInfoContent:SetWeaponData+394,83 3E 00 4C 8B 76 10 83 3E 00 48 63 5E 24)
registersymbol(UIWeaponDetailInfoContentAOB)
alloc(newmem3,1024,Rinne:UiWeaponDetailInfoContent:SetWeaponData)

///
aobscanregion(PersistentDataGetItemAOB,Rinne:PersistentData:GetItem,Rinne:PersistentData:GetItem+398,4C 8B F9 48 8B FA 49 8B F0)
registersymbol(PersistentDataGetItemAOB)
alloc(newmem4,1024,Rinne:PersistentData:GetItem)

///
label(PlayerParameterPtr)
registersymbol(PlayerParameterPtr)
label(PlayerCharacterPointCounterPtr)
registersymbol(PlayerCharacterPointCounterPtr)

///
label(PersistentDataWPNPtr)
registersymbol(PersistentDataWPNPtr)

///
label(HighlightedWeaponDataPtr)
registersymbol(HighlightedWeaponDataPtr)

///
label(OverrideWeaponItemID)
registersymbol(OverrideWeaponItemID)
label(PerformOverrideWeapon)
registersymbol(PerformOverrideWeapon)
label(MaxShadestoneSlots)
registersymbol(MaxShadestoneSlots)
label(OverrideStoneItemID)
registersymbol(OverrideStoneItemID)
label(PerformOverrideStone)
registersymbol(PerformOverrideStone)

newmem:
  call r11
  mov [PlayerParameterPtr],rax
  push rax
  mov rax,[rax+A8]
  mov [PlayerCharacterPointCounterPtr],rax
  pop rax
  test rax,rax
  jmp return
  
PlayerParameterPtr:
dq 0
PlayerCharacterPointCounterPtr:
dq 0

newmem2:
  mov [PersistentDataWPNPtr],rdi
  
originalcode2:
  call r11
  test eax,eax
  jmp return2
  
PersistentDataWPNPtr:
dq 0

newmem3:
  mov [HighlightedWeaponDataPtr],rsi
  
originalcode3:
  cmp dword ptr [rsi],00
  mov r14,[rsi+10]
  jmp return3
  
HighlightedWeaponDataPtr:
dq 0

newmem4:
  cmp [PerformOverrideWeapon],1
  jne SkipPerformOverrideWeapon
  mov rdi,rdx
  mov rdi,[rdi+10]
  mov dword ptr [rdi+2C],3
  mov dword ptr [rdi+30],4
  mov rdi,[rdi+18]
  mov dword ptr [rdi+10],#14
  mov r15,OverrideWeaponItemID
  mov r15,[r15]
  mov [rdi+14],r15
  mov r15,OverrideWeaponItemID
  add r15,8
  mov r15,[r15]
  mov [rdi+1C],r15
  mov r15,OverrideWeaponItemID
  add r15,10
  mov r15,[r15]
  mov [rdi+24],r15
  mov r15,OverrideWeaponItemID
  add r15,18
  mov r15,[r15]
  mov [rdi+2C],r15
  mov [PerformOverrideWeapon],0
  jmp originalcode4
SkipPerformOverrideWeapon:
  cmp [PerformOverrideStone],1
  jne SkipPerformOverrideStone
  mov rdi,rdx
  mov rdi,[rdi+10]
  mov dword ptr [rdi+2C],1
  mov rdi,[rdi+18]
  mov dword ptr [rdi+10],#10
  mov r15,OverrideStoneItemID
  mov r15,[r15]
  mov [rdi+14],r15
  mov r15,OverrideStoneItemID
  add r15,8
  mov r15,[r15]
  mov [rdi+1C],r15
  mov r15,OverrideStoneItemID
  add r15,10
  mov r15,[r15]
  mov [rdi+24],r15
  mov r15,OverrideStoneItemID
  add r15,18
  mov r15,[r15]
  mov [rdi+2C],r15
  mov [PerformOverrideStone],0
  jmp originalcode4
SkipPerformOverrideStone:
  cmp [MaxShadestoneSlots],1
  jne originalcode4
  mov rdi,rdx
  mov rdi,[rdi+10]
  mov dword ptr [rdi+30],4
  jmp originalcode4
  
originalcode4:
  mov r15,rcx
  mov rdi,rdx
  jmp return4
  
MaxShadestoneSlots:
dq 0
PerformOverrideWeapon:
dq 0
PerformOverrideStone:
dq 0
OverrideWeaponItemID:
dq 0
dq 0
dq 0
dq 0
OverrideStoneItemID:
dq 0
dq 0
dq 0
dq 0

GetExpAOB:
  jmp newmem
  nop
  return:

UIPlayerInfoWindowInitializeAOB:
  jmp newmem2
  return2:

UIWeaponDetailInfoContentAOB:
  jmp newmem3
  nop
  nop
  return3:

PersistentDataGetItemAOB:
  jmp newmem4
  nop
  return4:
  
[DISABLE]

GetExpAOB:
  db 41 FF D3 48 85 C0
  
unregistersymbol(GetExpAOB)
unregistersymbol(PlayerParameterPtr)
unregistersymbol(PlayerCharacterPointCounterPtr)

UIPlayerInfoWindowInitializeAOB:
  db 41 FF D3 85 C0
  
unregistersymbol(PersistentDataWPNPtr)
unregistersymbol(UIPlayerInfoWindowInitializeAOB)

UIWeaponDetailInfoContentAOB:
  db 83 3E 00 4C 8B 76 10
  
unregistersymbol(HighlightedWeaponDataPtr)
unregistersymbol(UIWeaponDetailInfoContentAOB)

PersistentDataGetItemAOB:
  db 4C 8B F9 48 8B FA

unregistersymbol(MaxShadestoneSlots)
unregistersymbol(PerformOverrideWeapon)
unregistersymbol(OverrideWeaponItemID)
unregistersymbol(PerformOverrideStone)
unregistersymbol(OverrideStoneItemID)
unregistersymbol(PersistentDataGetItemAOB)
  
dealloc(newmem)
dealloc(newmem2)
dealloc(newmem3)
dealloc(newmem4)
</AssemblerScript>
			<CheatEntries>
			  <CheatEntry>
				  <ID>100</ID>
				  <Description>"[Scripts]"</Description>
				  <Options moHideChildren="1"/>
				  <GroupHeader>1</GroupHeader>
				  <CheatEntries>
					<CheatEntry>
					  <ID>201</ID>
					  <Description>"Damage Modifier (God Mode,One Hit Kill, etc)"</Description>
					  <Options moHideChildren="1"/>
					  <VariableType>Auto Assembler Script</VariableType>
					  <AssemblerScript>[ENABLE]
{$lua}
mono_compile_method(mono_getJitInfo(getAddress('Rinne:BattleCommon:GetBattleCollisionDamage')).method)
{$asm}		  

/* This block of code determines if Attacking Character Is Player */
aobscanregion(GetBattleCollisionDamageAOB1,Rinne:BattleCommon:GetBattleCollisionDamage,Rinne:BattleCommon:GetBattleCollisionDamage+2692,B8 01 00 00 00 41 BC 02 00 00 00 85 C9 4C 0F 45 E0)
registersymbol(GetBattleCollisionDamageAOB1)
/* End of this block of code determines if Attacking Character Is Player */
alloc(newmem,1024,Rinne:BattleCommon:GetBattleCollisionDamage)

/* This code calls returns the damage at the end of the function */
aobscanregion(GetBattleCollisionDamageAOB2,Rinne:BattleCommon:GetBattleCollisionDamage,Rinne:BattleCommon:GetBattleCollisionDamage+2692,F3 0F 10 45 C4 F3 0F 5A C0 F2 0F 5A C0 90 49 BB)
registersymbol(GetBattleCollisionDamageAOB2)
/* End of this code returns the damage at the end of the function */
alloc(newmem2,1024,Rinne:BattleCommon:GetBattleCollisionDamage)

///
label(AttackCharacterIsPlayer)
label(GodMode)
registersymbol(GodMode)
label(OneHitKill)
registersymbol(OneHitKill)
label(fEnemyDamageMult)
registersymbol(fEnemyDamageMult)
label(fHeroDamageMult)
registersymbol(fHeroDamageMult)

newmem:
  mov [AttackCharacterIsPlayer],ecx
  
originalcode:
  mov eax,00000001
  jmp return

newmem2:
  movss xmm0,[rbp-3C]
  cmp [AttackCharacterIsPlayer],1
  je EnemyHit
HeroHit:
  cmp [GodMode],1
  jne SkipGodMode
  xorps xmm0,xmm0
  jmp originalcode2
SkipGodMode:
  cmp [fHeroDamageMult],(float)0.0
  je originalcode2
  movss xmm5,[fHeroDamageMult]
  mulss xmm0,xmm5
  jmp originalcode2
EnemyHit:
  cmp [OneHitKill],1
  jne SkipOneHitKill
  movss xmm0,[OneHitKillDamage]
  jmp originalcode2
SkipOneHitKill:
  cmp [fEnemyDamageMult],(float)0.0
  je originalcode2
  movss xmm5,[fEnemyDamageMult]
  mulss xmm0,xmm5
  
originalcode2:
  jmp return2
  
AttackCharacterIsPlayer:
dq 0
OneHitKillDamage:
dq (float)999999.0
GodMode:
dq 0
fHeroDamageMult:
dq (float)0.25
fEnemyDamageMult:
dq (float)10.0
OneHitKill:
dq 0
  
GetBattleCollisionDamageAOB1:
  jmp newmem
  return:
  
GetBattleCollisionDamageAOB2:
  jmp newmem2
  return2:
  
[DISABLE]

GetBattleCollisionDamageAOB1:
  db B8 01 00 00 00
  
unregistersymbol(GetBattleCollisionDamageAOB1)
unregistersymbol(GodMode)
unregistersymbol(fHeroDamageMult)
unregistersymbol(fEnemyDamageMult)
unregistersymbol(OneHitKill)

GetBattleCollisionDamageAOB2:
  db F3 0F 10 45 C4

unregistersymbol(GetBattleCollisionDamageAOB2)
  
dealloc(newmem)
dealloc(newmem2)
</AssemblerScript>
					  <CheatEntries>
						<CheatEntry>
						  <ID>201</ID>
						  <Description>"God Mode"</Description>
						  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
						  <VariableType>4 Bytes</VariableType>
						  <Address>GodMode</Address>
						</CheatEntry>
						<CheatEntry>
						  <ID>202</ID>
						  <Description>"Hero Damage Multiplier (Set to 0.0 = Off; Otherwise multiplier so 0.5 is half damage to hero party)"</Description>
						  <VariableType>Float</VariableType>
						  <Address>fHeroDamageMult</Address>
						</CheatEntry>
						<CheatEntry>
						  <ID>203</ID>
						  <Description>"One Hit Kill"</Description>
						  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
						  <VariableType>4 Bytes</VariableType>
						  <Address>OneHitKill</Address>
						</CheatEntry>
						<CheatEntry>
						  <ID>204</ID>
						  <Description>"Enemy Damage Multiplier (Set to Zero = Off; Otherwise multiplier to damage you deal to enemies)"</Description>
						  <VariableType>Float</VariableType>
						  <Address>fEnemyDamageMult</Address>
						</CheatEntry>
					  </CheatEntries>
					</CheatEntry>
					<CheatEntry>
					  <ID>205</ID>
					  <Description>"Exp Multiplier"</Description>
					  <Options moHideChildren="1"/>
					  <VariableType>Auto Assembler Script</VariableType>
					  <AssemblerScript>[ENABLE]
{$lua}
mono_compile_method(mono_getJitInfo(getAddress('Rinne:CharacterParameter:GetExp')).method)
{$asm}		  

aobscanregion(CharacterParameterGetExpAOB,Rinne:CharacterParameter:GetExp,Rinne:CharacterParameter:GetExp+145,48 8B F9 48 8B F2 85 F6 0F 8E 86 00 00 00)
registersymbol(CharacterParameterGetExpAOB)
alloc(newmem,1024,Rinne:CharacterParameter:GetExp)

///
label(EXPMultiplier)
registersymbol(EXPMultiplier)

newmem:
  mov rdi,rcx
  imul rdx,[EXPMultiplier]
  mov rsi,rdx
  jmp return
  
  
EXPMultiplier:
dq #25
  
CharacterParameterGetExpAOB:
  jmp newmem
  nop
  return:
    
[DISABLE]

CharacterParameterGetExpAOB:
  db 48 8B F9 48 8B F2
  
unregistersymbol(CharacterParameterGetExpAOB)
unregistersymbol(EXPMultiplier)
  
dealloc(newmem)
</AssemblerScript>
					  <CheatEntries>
						<CheatEntry>
						  <ID>206</ID>
						  <Description>"EXP Multiplier"</Description>
						  <VariableType>4 Bytes</VariableType>
						  <Address>EXPMultiplier</Address>
						</CheatEntry>
					  </CheatEntries>
					</CheatEntry>
					<CheatEntry>
					  <ID>210</ID>
					  <Description>"Almost No Skill Cool Down"</Description>
					  <Options moHideChildren="1"/>
					  <VariableType>Auto Assembler Script</VariableType>
					  <AssemblerScript>[ENABLE]
{$lua}
mono_compile_method(mono_getJitInfo(getAddress('Rinne:CharacterPointCounter:UpdateSkillCoolTime')).method)
{$asm}		  

aobscanregion(UpdateSkillCoolTimeAOB,Rinne:CharacterPointCounter:UpdateSkillCoolTime,Rinne:CharacterPointCounter:UpdateSkillCoolTime+193,0F B6 40 18 3B C7 0F 85 CA 00 00 00)
registersymbol(UpdateSkillCoolTimeAOB)
alloc(newmem,1024,Rinne:CharacterPointCounter:UpdateSkillCoolTime)

newmem:
  push rax
  mov rax,[PlayerCharacterPointCounterPtr]
  cmp r15,rax
  pop rax
  jne originalcode
  push rbx
  xor rbx,rbx
  mov ebx,[ZeroRemainTime]
  mov [rax+20],ebx
  pop rbx
  
originalcode:
  movzx eax,byte ptr [rax+18]
  cmp eax,edi
  jmp return
  
ZeroRemainTime:
dq (float)0.00
  
UpdateSkillCoolTimeAOB:
  jmp newmem
  nop
  return:
    
[DISABLE]

UpdateSkillCoolTimeAOB:
  db 0F B6 40 18 3B C7
  
unregistersymbol(UpdateSkillCoolTimeAOB)
  
dealloc(newmem)
</AssemblerScript>
					</CheatEntry>
					<CheatEntry>
					  <ID>212</ID>
					  <Description>"Infinite Potion Use"</Description>
					  <Options moHideChildren="1"/>
					  <VariableType>Auto Assembler Script</VariableType>
					  <AssemblerScript>[ENABLE]
{$lua}
mono_compile_method(mono_getJitInfo(getAddress('Rinne:PlayerController:UsePotion')).method)
{$asm}		  

aobscanregion(UsePotionAOB,Rinne:PlayerController:UsePotion,Rinne:PlayerController:UsePotion+410,F3 41 0F 11 6F 18 41 83 3F 00 49 63 7F 10 48 8B C7 FF C8)
registersymbol(UsePotionAOB)
alloc(newmem,1024,Rinne:PlayerController:UsePotion)

newmem:
  xorps xmm5,xmm5
  
originalcode:
  movss [r15+18],xmm5
  jmp return
    
UsePotionAOB:
  jmp newmem
  nop
  return:

UsePotionAOB+11:
  db 90 90
    
[DISABLE]

UsePotionAOB:
  db F3 41 0F 11 6F 18
  
UsePotionAOB+11:
  db FF C8
  
unregistersymbol(UsePotionAOB)
  
dealloc(newmem)
</AssemblerScript>
					</CheatEntry>
					<CheatEntry>
					  <ID>215</ID>
					  <Description>"Manifest Gauge Minimum 100% Maximum 150%"</Description>
					  <Options moHideChildren="1"/>
					  <VariableType>Auto Assembler Script</VariableType>
					  <AssemblerScript>[ENABLE]
{$lua}
mono_compile_method(mono_getJitInfo(getAddress('Rinne:PlayerParameter:set_kamishiroSyncRatio')).method)
{$asm}		  

aobscanregion(SetKamishiroSyncRatioAOB,Rinne:PlayerParameter:set_kamishiroSyncRatio,Rinne:PlayerParameter:set_kamishiroSyncRatio+A7,F3 0F 5A C0 F2 0F 5A E8 F3 0F 11 68 44)
registersymbol(SetKamishiroSyncRatioAOB)
alloc(newmem,1024,Rinne:PlayerParameter:set_kamishiroSyncRatio)

label(MinManifestPct)
label(MaxManifestPct)

newmem:
  comiss xmm0,[MinManifestPct]
  ja @F
  movss xmm0,[MinManifestPct]
@@:
  comiss xmm0,[MaxManifestPct]
  jb originalcode
  movss xmm0,[MaxManifestPct]
  
originalcode:
  cvtss2sd xmm0,xmm0
  cvtsd2ss xmm5,xmm0
  jmp return

MinManifestPct:
dq (float)100.0
MaxManifestPct:
dq (float)150.0
    
SetKamishiroSyncRatioAOB:
  jmp newmem
  nop
  nop
  nop
  return:
    
[DISABLE]

SetKamishiroSyncRatioAOB:
  db F3 0F 5A C0 F2 0F 5A E8
    
unregistersymbol(SetKamishiroSyncRatioAOB)
  
dealloc(newmem)
</AssemblerScript>
					</CheatEntry>
					<CheatEntry>
					  <ID>220</ID>
					  <Description>"Infinite Shade Stones/Set Minimum Quantity On Use/Gain"</Description>
					  <Options moHideChildren="1"/>
					  <VariableType>Auto Assembler Script</VariableType>
					  <AssemblerScript>[ENABLE]
{$lua}
mono_compile_method(mono_getJitInfo(getAddress('Rinne:PersistentData:AddManaStone')).method)
mono_compile_method(mono_getJitInfo(getAddress('Rinne:PersistentData:DelManaStone')).method)
{$asm}		  

///
aobscanregion(AddManaStoneAOB,Rinne:PersistentData:AddManaStone,Rinne:PersistentData:AddManaStone+115,49 63 46 10 03 45 E0 41 83 3E 00)
registersymbol(AddManaStoneAOB)
alloc(newmem,1024,Rinne:PersistentData:AddManaStone)

///
aobscanregion(DelManaStoneAOB,Rinne:PersistentData:DelManaStone,Rinne:PersistentData:DelManaStone+AB,49 63 46 10 3B C6 7C 19)
registersymbol(DelManaStoneAOB)
alloc(newmem2,1024,Rinne:PersistentData:DelManaStone)

///
label(MinimumQuantity)
registersymbol(MinimumQuantity)

newmem:
  movsxd rax,dword ptr [r14+10]
  cmp rax,[MinimumQuantity]
  jge originalcode
  mov rax,[MinimumQuantity]
  jmp return
  
originalcode:
  add eax,[rbp-20]
  jmp return

MinimumQuantity:
dq #25
    
newmem2:
  movsxd rax,dword ptr [r14+10]
  xor esi,esi
  cmp rax,[MinimumQuantity]
  jge originalcode2
  mov rax,[MinimumQuantity]
  mov [r14+10],eax
  
originalcode2:
  cmp eax,esi
  jmp return2
  
AddManaStoneAOB:
  jmp newmem
  nop
  nop
  return:

DelManaStoneAOB:
  jmp newmem2
  nop
  return2:
  
[DISABLE]

AddManaStoneAOB:
  db 49 63 46 10 03 45 E0
  
unregistersymbol(AddManaStoneAOB)
unregistersymbol(MinimumQuantity)

DelManaStoneAOB:
  db 49 63 46 10 3B C6
  
dealloc(newmem)
dealloc(newmem2)
</AssemblerScript>
					  <CheatEntries>
						<CheatEntry>
						  <ID>221</ID>
						  <Description>"Minimum Quantity"</Description>
						  <VariableType>4 Bytes</VariableType>
						  <Address>MinimumQuantity</Address>
						</CheatEntry>
					  </CheatEntries>
					</CheatEntry>
					<CheatEntry>
					  <ID>225</ID>
					  <Description>"Daemon Soulstone Exp Multiplier"</Description>
					  <Options moHideChildren="1"/>
					  <VariableType>Auto Assembler Script</VariableType>
					  <AssemblerScript>[ENABLE]
{$lua}
mono_compile_method(mono_getJitInfo(getAddress('KamishiroParameter:GetOnitamaExp')).method)
{$asm}		  

aobscanregion(KamishiroParameterGetOnitamaExpAOB,KamishiroParameter:GetOnitamaExp,KamishiroParameter:GetOnitamaExp+170,48 8B F9 F3 0F 11 4D D8 49 8B F0)
registersymbol(KamishiroParameterGetOnitamaExpAOB)
alloc(newmem,1024,KamishiroParameter:GetOnitamaExp)

///
label(OnitamaEXPMultiplier)
registersymbol(OnitamaEXPMultiplier)

newmem:
  mulss xmm1,[OnitamaEXPMultiplier]
  
originalcode:
  mov rdi,rcx
  movss [rbp-28],xmm1
  jmp return
    
OnitamaEXPMultiplier:
dq (float)50.00
  
KamishiroParameterGetOnitamaExpAOB:
  jmp newmem
  nop
  nop
  nop
  return:
    
[DISABLE]

KamishiroParameterGetOnitamaExpAOB:
  db 48 8B F9 F3 0F 11 4D D8
  
unregistersymbol(KamishiroParameterGetOnitamaExpAOB)
unregistersymbol(OnitamaEXPMultiplier)
  
dealloc(newmem)
</AssemblerScript>
					  <CheatEntries>
						<CheatEntry>
						  <ID>226</ID>
						  <Description>"Daemon Soulstone EXP Multiplier"</Description>
						  <VariableType>Float</VariableType>
						  <Address>OnitamaEXPMultiplier</Address>
						</CheatEntry>
					  </CheatEntries>
					</CheatEntry>
					<CheatEntry>
					  <ID>230</ID>
					  <Description>"Always Have 4 Shadestone Slots On Weapon Pickup"</Description>
					  <Options moHideChildren="1"/>
					  <VariableType>Auto Assembler Script</VariableType>
					  <AssemblerScript>[ENABLE]
{$lua}
writeInteger(getAddress("MaxShadestoneSlots"),1)
{$asm}
    
[DISABLE]
{$lua}
writeInteger(getAddress("MaxShadestoneSlots"),0)
{$asm}

</AssemblerScript>
					</CheatEntry>
					<CheatEntry>
					  <ID>235</ID>
					  <Description>"Greatly Increase Awaken Skill Chance"</Description>
					  <Options moHideChildren="1"/>
					  <VariableType>Auto Assembler Script</VariableType>
					  <AssemblerScript>[ENABLE]
{$lua}
mono_compile_method(mono_getJitInfo(getAddress('Rinne:BattleManager:JudgeAwakensStart')).method)
{$asm}		  

aobscanregion(BattleManagerJudgeAwakensStartAOB,Rinne:BattleManager:JudgeAwakensStart,Rinne:BattleManager:JudgeAwakensStart+D22,B9 01 00 00 00 BA 64 00 00 00)
registersymbol(BattleManagerJudgeAwakensStartAOB)
 
BattleManagerJudgeAwakensStartAOB+6:
  db 01
    
[DISABLE]

BattleManagerJudgeAwakensStartAOB+6:
  db 64
  
unregistersymbol(BattleManagerJudgeAwakensStartAOB)  
</AssemblerScript>
					</CheatEntry>
					<CheatEntry>
					  <ID>240</ID>
					  <Description>"Override Awaken Skill Choice (Auto Increments Choice Until Maximum)"</Description>
					  <Options moHideChildren="1"/>
					  <VariableType>Auto Assembler Script</VariableType>
					  <AssemblerScript>[ENABLE]
{$lua}
mono_compile_method(mono_getJitInfo(getAddress('Rinne:BattleManager:JudgeAwakensStart')).method)
{$asm}		  

aobscanregion(BattleManagerJudgeAwakensStartAOB2,Rinne:BattleManager:JudgeAwakensStart,Rinne:BattleManager:JudgeAwakensStart+D22,89 85 40 FF FF FF 85 C0 0F 8C E1 00 00 00)
registersymbol(BattleManagerJudgeAwakensStartAOB2)
alloc(newmem,1024,Rinne:BattleManager:JudgeAwakensStart)

aobscanregion(BattleManagerJudgeAwakensStartAOB3,Rinne:BattleManager:JudgeAwakensStart,Rinne:BattleManager:JudgeAwakensStart+D22,F3 0F 10 87 BC 01 00 00 F3 0F 5A C0 66 0F 57 C9 66 0F 2F C8 7A 06)
registersymbol(BattleManagerJudgeAwakensStartAOB3)

aobscanregion(BattleManagerJudgeAwakensStartAOB4,Rinne:BattleManager:JudgeAwakensStart,Rinne:BattleManager:JudgeAwakensStart+D22,0F B6 87 B4 01 00 00 85 C0 0F 85 E5 0B 00 00)
registersymbol(BattleManagerJudgeAwakensStartAOB4)

label(CurrentAwakenChoice)
registersymbol(CurrentAwakenChoice)

newmem:
  mov rax,[rdi+00000110]
  movsxd rax,dword ptr [rax+18]
  cmp [CurrentAwakenChoice],eax
  jl @F
  mov [CurrentAwakenChoice],0
@@:
  mov rax,[CurrentAwakenChoice]
  inc [CurrentAwakenChoice]

originalcode:
  mov [rbp-000000C0],eax
  jmp return
  
CurrentAwakenChoice:
dq 0
  
BattleManagerJudgeAwakensStartAOB2:
  jmp newmem
  nop
  return:

BattleManagerJudgeAwakensStartAOB3+14:
  db EB

BattleManagerJudgeAwakensStartAOB4+9:
  db 90 90 90 90 90
   
[DISABLE]

BattleManagerJudgeAwakensStartAOB2:
  db 89 85 40 FF FF FF
  
unregistersymbol(BattleManagerJudgeAwakensStartAOB2)
unregistersymbol(CurrentAwakenChoice)

BattleManagerJudgeAwakensStartAOB3+14:
  db 7A

unregistersymbol(BattleManagerJudgeAwakensStartAOB3)

BattleManagerJudgeAwakensStartAOB4+9:
  db 0F 85 E5 0B 00 00
  
unregistersymbol(BattleManagerJudgeAwakensStartAOB4)

dealloc(newmem)
</AssemblerScript>
					  <CheatEntries>
						<CheatEntry>
						  <ID>241</ID>
						  <Description>"Current Awaken Choice"</Description>
						  <VariableType>4 Bytes</VariableType>
						  <Address>CurrentAwakenChoice</Address>
						</CheatEntry>
					  </CheatEntries>
					</CheatEntry>					
				  </CheatEntries>
				</CheatEntry>
				<CheatEntry>
				  <ID>4000</ID>
				  <Description>"Pointers"</Description>
				  <Options moHideChildren="1"/>
				  <GroupHeader>1</GroupHeader>
				  <CheatEntries>
					<CheatEntry>
					  <ID>4001</ID>
					  <Description>"Player EXP"</Description>
					  <VariableType>4 Bytes</VariableType>
					  <Address>PlayerParameterPtr</Address>
					  <Offsets>
						<Offset>B4</Offset>
					  </Offsets>
					</CheatEntry>
					<CheatEntry>
					  <ID>4002</ID>
					  <Description>"Player Current HP"</Description>
					  <VariableType>4 Bytes</VariableType>
					  <Address>PlayerParameterPtr</Address>
					  <Offsets>
						<Offset>BC</Offset>
					  </Offsets>
					</CheatEntry>
					<CheatEntry>
					  <ID>4003</ID>
					  <Description>"Player Manifest Gauge"</Description>
					  <VariableType>Float</VariableType>
					  <Address>PlayerParameterPtr</Address>
					  <Offsets>
						<Offset>44</Offset>
						<Offset>100</Offset>
					  </Offsets>
					</CheatEntry>
					<CheatEntry>
					  <ID>4004</ID>
					  <Description>"Potion Current Quantity"</Description>
					  <VariableType>4 Bytes</VariableType>
					  <Address>PlayerParameterPtr</Address>
					  <Offsets>
						<Offset>10</Offset>
						<Offset>108</Offset>
					  </Offsets>
					</CheatEntry>
					<CheatEntry>
					  <ID>4005</ID>
					  <Description>"Potion Max Quantity"</Description>
					  <VariableType>4 Bytes</VariableType>
					  <Address>PlayerParameterPtr</Address>
					  <Offsets>
						<Offset>14</Offset>
						<Offset>108</Offset>
					  </Offsets>
					</CheatEntry>
					<CheatEntry>
					  <ID>4006</ID>
					  <Description>"Null Stone Quantity (View Main Menu To Update Pointer)"</Description>
					  <VariableType>4 Bytes</VariableType>
					  <Address>PersistentDataWPNPtr</Address>
					  <Offsets>
						<Offset>154</Offset>
					  </Offsets>
					</CheatEntry>
					<CheatEntry>
					  <ID>4007</ID>
					  <Description>"Play Time (In Seconds) (View Main Menu To Update Pointer)"</Description>
					  <VariableType>4 Bytes</VariableType>
					  <Address>PersistentDataWPNPtr</Address>
					  <Offsets>
						<Offset>120</Offset>
					  </Offsets>
					</CheatEntry>
					<CheatEntry>
					  <ID>4010</ID>
					  <Description>"Highlighted Weapon Data"</Description>
					  <Options moHideChildren="1"/>
					  <GroupHeader>1</GroupHeader>
					  <CheatEntries>
						<CheatEntry>
						  <ID>4011</ID>
						  <Description>"Weapon ID"</Description>
						  <VariableType>String</VariableType>
						  <Length>14</Length>
						  <Unicode>1</Unicode>
						  <ZeroTerminate>1</ZeroTerminate>
						  <Address>HighlightedWeaponDataPtr</Address>
						  <Offsets>
							<Offset>14</Offset>
							<Offset>10</Offset>
						  </Offsets>
						</CheatEntry>
						<CheatEntry>
						  <ID>4012</ID>
						  <Description>"Weapon Attack"</Description>
						  <VariableType>4 Bytes</VariableType>
						  <Address>HighlightedWeaponDataPtr</Address>
						  <Offsets>
							<Offset>24</Offset>
						  </Offsets>
						</CheatEntry>
						<CheatEntry>
						  <ID>4013</ID>
						  <Description>"Weapon Defense"</Description>
						  <VariableType>4 Bytes</VariableType>
						  <Address>HighlightedWeaponDataPtr</Address>
						  <Offsets>
							<Offset>28</Offset>
						  </Offsets>
						</CheatEntry>
					  </CheatEntries>
					</CheatEntry>
					<CheatEntry>
					  <ID>4015</ID>
					  <Description>"Override Weapon Item ID"</Description>
					  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">WP_0000_01_001:WP_0000_01_001 (CK_0000)
WP_1000_01_001:WP_1000_01_001 (CK_1004)
WP_9999_01_001:WP_9999_01_001 (CK_2000)
WP_0001_01_001:WP_0001_01_001 (CK_0001)
WP_0001_02_001:WP_0001_02_001 (CK_0001)
WP_0001_03_001:WP_0001_03_001 (CK_0001)
WP_0001_04_001:WP_0001_04_001 (CK_0001)
WP_0001_05_001:WP_0001_05_001 (CK_0001)
WP_0001_06_001:WP_0001_06_001 (CK_0001)
WP_0001_07_001:WP_0001_07_001 (CK_0001)
WP_0001_08_001:WP_0001_08_001 (CK_0001)
WP_0001_09_001:WP_0001_09_001 (CK_0001)
WP_0001_10_001:WP_0001_10_001 (CK_0001)
WP_0001_11_001:WP_0001_11_001 (CK_0001)
WP_0001_11_999:WP_0001_11_999 (CK_0001)
WP_0002_01_001:WP_0002_01_001 (CK_0002)
WP_0002_02_001:WP_0002_02_001 (CK_0002)
WP_0002_03_001:WP_0002_03_001 (CK_0002)
WP_0002_04_001:WP_0002_04_001 (CK_0002)
WP_0002_05_001:WP_0002_05_001 (CK_0002)
WP_0002_06_001:WP_0002_06_001 (CK_0002)
WP_0002_07_001:WP_0002_07_001 (CK_0002)
WP_0002_08_001:WP_0002_08_001 (CK_0002)
WP_0002_09_001:WP_0002_09_001 (CK_0002)
WP_0002_10_001:WP_0002_10_001 (CK_0002)
WP_0002_11_001:WP_0002_11_001 (CK_0002)
WP_0002_11_999:WP_0002_11_999 (CK_0002)
WP_0003_01_001:WP_0003_01_001 (CK_0003)
WP_0003_02_001:WP_0003_02_001 (CK_0003)
WP_0003_03_001:WP_0003_03_001 (CK_0003)
WP_0003_04_001:WP_0003_04_001 (CK_0003)
WP_0003_05_001:WP_0003_05_001 (CK_0003)
WP_0003_06_001:WP_0003_06_001 (CK_0003)
WP_0003_07_001:WP_0003_07_001 (CK_0003)
WP_0003_08_001:WP_0003_08_001 (CK_0003)
WP_0003_09_001:WP_0003_09_001 (CK_0003)
WP_0003_10_001:WP_0003_10_001 (CK_0003)
WP_0003_11_001:WP_0003_11_001 (CK_0003)
WP_0003_11_999:WP_0003_11_999 (CK_0003)
WP_0004_01_001:WP_0004_01_001 (CK_0004)
WP_0004_02_001:WP_0004_02_001 (CK_0004)
WP_0004_03_001:WP_0004_03_001 (CK_0004)
WP_0004_04_001:WP_0004_04_001 (CK_0004)
WP_0004_05_001:WP_0004_05_001 (CK_0004)
WP_0004_06_001:WP_0004_06_001 (CK_0004)
WP_0004_07_001:WP_0004_07_001 (CK_0004)
WP_0004_08_001:WP_0004_08_001 (CK_0004)
WP_0004_09_001:WP_0004_09_001 (CK_0004)
WP_0004_10_001:WP_0004_10_001 (CK_0004)
WP_0005_01_001:WP_0005_01_001 (CK_0005)
WP_0005_02_001:WP_0005_02_001 (CK_0005)
WP_0005_03_001:WP_0005_03_001 (CK_0005)
WP_0005_04_001:WP_0005_04_001 (CK_0005)
WP_0005_05_001:WP_0005_05_001 (CK_0005)
WP_0005_06_001:WP_0005_06_001 (CK_0005)
WP_0005_07_001:WP_0005_07_001 (CK_0005)
WP_0005_08_001:WP_0005_08_001 (CK_0005)
WP_0005_09_001:WP_0005_09_001 (CK_0005)
WP_0005_10_001:WP_0005_10_001 (CK_0005)
WP_0006_01_001:WP_0006_01_001 (CK_0006)
WP_0006_02_001:WP_0006_02_001 (CK_0006)
WP_0006_03_001:WP_0006_03_001 (CK_0006)
WP_0006_04_001:WP_0006_04_001 (CK_0006)
WP_0006_05_001:WP_0006_05_001 (CK_0006)
WP_0006_06_001:WP_0006_06_001 (CK_0006)
WP_0006_07_001:WP_0006_07_001 (CK_0006)
WP_0006_08_001:WP_0006_08_001 (CK_0006)
WP_0006_09_001:WP_0006_09_001 (CK_0006)
WP_0006_10_001:WP_0006_10_001 (CK_0006)
WP_0007_01_001:WP_0007_01_001 (CK_0007)
WP_0007_02_001:WP_0007_02_001 (CK_0007)
WP_0007_03_001:WP_0007_03_001 (CK_0007)
WP_0007_04_001:WP_0007_04_001 (CK_0007)
WP_0007_05_001:WP_0007_05_001 (CK_0007)
WP_0007_06_001:WP_0007_06_001 (CK_0007)
WP_0007_07_001:WP_0007_07_001 (CK_0007)
WP_0007_08_001:WP_0007_08_001 (CK_0007)
WP_0007_09_001:WP_0007_09_001 (CK_0007)
WP_0007_10_001:WP_0007_10_001 (CK_0007)
WP_0008_01_001:WP_0008_01_001 (CK_0008)
WP_0008_02_001:WP_0008_02_001 (CK_0008)
WP_0008_03_001:WP_0008_03_001 (CK_0008)
WP_0008_04_001:WP_0008_04_001 (CK_0008)
WP_0008_05_001:WP_0008_05_001 (CK_0008)
WP_0008_06_001:WP_0008_06_001 (CK_0008)
WP_0008_07_001:WP_0008_07_001 (CK_0008)
WP_0008_08_001:WP_0008_08_001 (CK_0008)
WP_0008_09_001:WP_0008_09_001 (CK_0008)
WP_0008_10_001:WP_0008_10_001 (CK_0008)
WP_0009_01_001:WP_0009_01_001 (CK_0009)
WP_0009_02_001:WP_0009_02_001 (CK_0009)
WP_0009_03_001:WP_0009_03_001 (CK_0009)
WP_0009_04_001:WP_0009_04_001 (CK_0009)
WP_0009_05_001:WP_0009_05_001 (CK_0009)
WP_0009_06_001:WP_0009_06_001 (CK_0009)
WP_0009_07_001:WP_0009_07_001 (CK_0009)
WP_0009_08_001:WP_0009_08_001 (CK_0009)
WP_0009_09_001:WP_0009_09_001 (CK_0009)
WP_0009_10_001:WP_0009_10_001 (CK_0009)
WP_0011_01_001:WP_0011_01_001 (CK_0011)
WP_0011_02_001:WP_0011_02_001 (CK_0011)
WP_0011_03_001:WP_0011_03_001 (CK_0011)
WP_0011_04_001:WP_0011_04_001 (CK_0011)
WP_0011_05_001:WP_0011_05_001 (CK_0011)
WP_0011_06_001:WP_0011_06_001 (CK_0011)
WP_0011_07_001:WP_0011_07_001 (CK_0011)
WP_0011_08_001:WP_0011_08_001 (CK_0011)
WP_0011_09_001:WP_0011_09_001 (CK_0011)
WP_0011_10_001:WP_0011_10_001 (CK_0011)
WP_0012_01_001:WP_0012_01_001 (CK_0012)
WP_0012_02_001:WP_0012_02_001 (CK_0012)
WP_0012_03_001:WP_0012_03_001 (CK_0012)
WP_0012_04_001:WP_0012_04_001 (CK_0012)
WP_0012_05_001:WP_0012_05_001 (CK_0012)
WP_0012_06_001:WP_0012_06_001 (CK_0012)
WP_0012_07_001:WP_0012_07_001 (CK_0012)
WP_0012_08_001:WP_0012_08_001 (CK_0012)
WP_0012_09_001:WP_0012_09_001 (CK_0012)
WP_0012_10_001:WP_0012_10_001 (CK_0012)
</DropDownList>
					  <VariableType>String</VariableType>
					  <Length>14</Length>
					  <Unicode>1</Unicode>
					  <ZeroTerminate>1</ZeroTerminate>
					  <Address>OverrideWeaponItemID</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>4016</ID>
					  <Description>"Perform Override Item Drop With Weapon You Picked"</Description>
					  <Options moHideChildren="1"/>
					  <VariableType>Auto Assembler Script</VariableType>
					  <AssemblerScript>[ENABLE]
{$lua}
writeInteger(getAddress("PerformOverrideWeapon"),1)
{$asm}
    
[DISABLE]

</AssemblerScript>
					</CheatEntry>
					<CheatEntry>
					  <ID>4017</ID>
					  <Description>"Override Stone Item ID"</Description>
					  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">STONE_0001:Attack
STONE_0002:Attack +
STONE_0003:Attack ++
STONE_0004:Low Affinity Attack
STONE_0005:Low Affinity Attack +
STONE_0006:Low Affinity Attack ++
STONE_0007:Manifest Attack
STONE_0008:Manifest Attack +
STONE_0009:Manifest Attack ++
STONE_0010:Basic Attack
STONE_0011:Basic Attack +
STONE_0012:Basic Attack ++
STONE_0013:Skill Attack
STONE_0014:Skill Attack +
STONE_0015:Skill Attack ++
STONE_0016:Sky Attack
STONE_0017:Sky Attack +
STONE_0018:Sky Attack ++
STONE_0019:Earth Attack
STONE_0020:Earth Attack +
STONE_0021:Earth Attack ++
STONE_0022:Shadow Attack
STONE_0023:Shadow Attack +
STONE_0024:Shadow Attack ++
STONE_0025:Light Attack
STONE_0026:Light Attack +
STONE_0027:Light Attack ++
STONE_0028:Debuff Attack
STONE_0029:Debuff Attack +
STONE_0030:Debuff Attack ++
STONE_0031:Reaction Attack
STONE_0032:Reaction Attack +
STONE_0033:Reaction Attack ++
STONE_0034:Attack Momentum
STONE_0035:Attack Momentum +
STONE_0036:Attack Momentum ++
STONE_0037:Revival
STONE_0038:Revival +
STONE_0039:Revival ++
STONE_0040:Martyr
STONE_0041:Martyr +
STONE_0042:Martyr ++
STONE_0043:Fearless
STONE_0044:Fearless +
STONE_0045:Fearless ++
STONE_0046:Slayer
STONE_0047:Slayer +
STONE_0048:Slayer ++
STONE_0049:Giant Slayer
STONE_0050:Giant Slayer +
STONE_0051:Giant Slayer ++
STONE_0052:Masochist
STONE_0053:Masochist +
STONE_0054:Masochist ++
STONE_0055:Concentration
STONE_0056:Concentration +
STONE_0057:Concentration ++
STONE_0058:Relentless Warrior
STONE_0059:Relentless Warrior +
STONE_0060:Relentless Warrior ++
STONE_0061:Crit Chance
STONE_0062:Crit Chance +
STONE_0063:Crit Chance ++
STONE_0064:Debuff Chance
STONE_0065:Debuff Chance +
STONE_0066:Debuff Chance ++
STONE_0067:Debuff Duration
STONE_0068:Debuff Duration +
STONE_0069:Debuff Duration ++
STONE_0070:Poison
STONE_0071:Poison +
STONE_0072:Poison ++
STONE_0073:Muddle
STONE_0074:Muddle +
STONE_0075:Muddle ++
STONE_0076:Paralyze
STONE_0077:Paralyze +
STONE_0078:Paralyze ++
STONE_0079:Stun
STONE_0080:Stun +
STONE_0081:Stun ++
STONE_0082:Kill
STONE_0083:Kill +
STONE_0084:Kill ++
STONE_0085:Vitality
STONE_0086:Vitality +
STONE_0087:Vitality ++
STONE_0088:Healing
STONE_0089:Healing +
STONE_0090:Healing ++
STONE_0091:Heal Limit Break
STONE_0092:Heal Limit Break +
STONE_0093:Heal Limit Break ++
STONE_0094:Buff Chance Up
STONE_0095:Buff Chance Up +
STONE_0096:Buff Chance Up ++
STONE_0097:Buff Duration Up
STONE_0098:Buff Duration Up +
STONE_0099:Buff Duration Up ++
STONE_0100:Defense
STONE_0101:Defense +
STONE_0102:Defense ++
STONE_0103:Last Stand
STONE_0104:Last Stand +
STONE_0105:Last Stand ++
STONE_0106:High Affinity Defense
STONE_0107:High Affinity Defense +
STONE_0108:High Affinity Defense ++
STONE_0109:Manifest Defense
STONE_0110:Manifest Defense +
STONE_0111:Manifest Defense ++
STONE_0112:Damage Cap
STONE_0113:Damage Cap +
STONE_0114:Damage Cap ++
STONE_0115:Inertia
STONE_0116:Inertia +
STONE_0117:Inertia ++
STONE_0118:Elusive
STONE_0119:Elusive +
STONE_0120:Elusive ++
STONE_0121:Deflect
STONE_0122:Deflect +
STONE_0123:Deflect ++
STONE_0124:Poison Resistance
STONE_0125:Poison Resistance +
STONE_0126:Poison Resistance ++
STONE_0127:Muddle Resistance
STONE_0128:Muddle Resistance +
STONE_0129:Muddle Resistance ++
STONE_0130:Paralyze Resistance
STONE_0131:Paralyze Resistance +
STONE_0132:Paralyze Resistance ++
STONE_0133:Stun Resistance
STONE_0134:Stun Resistance +
STONE_0135:Stun Resistance ++
STONE_0136:Kill Resistance
STONE_0137:Kill Resistance +
STONE_0138:Kill Resistance ++
STONE_0139:Debuff Recovery
STONE_0140:Debuff Recovery +
STONE_0141:Debuff Recovery ++
STONE_0142:Affinity
STONE_0143:Affinity +
STONE_0144:Affinity ++
STONE_0145:Initial Affinity
STONE_0146:Initial Affinity +
STONE_0147:Initial Affinity ++
STONE_0148:Affinity Maintain
STONE_0149:Affinity Maintain +
STONE_0150:Affinity Maintain ++
STONE_0151:Affinity Limit Break
STONE_0152:Affinity Limit Break +
STONE_0153:Affinity Limit Break ++
STONE_0154:Manifest Gauge
STONE_0155:Manifest Gauge +
STONE_0156:Manifest Gauge ++
STONE_0157:Awaken Chance
STONE_0158:Awaken Chance +
STONE_0159:Awaken Chance ++
STONE_0160:Awaken Duration
STONE_0161:Awaken Duration +
STONE_0162:Awaken Duration ++
STONE_0163:Stealth
STONE_0164:Stealth +
STONE_0165:Stealth ++
STONE_0166:Enhance Precepts
STONE_0167:Enhance Precepts +
STONE_0168:Enhance Precepts ++
STONE_0169:Weaken Precepts
STONE_0170:Weaken Precepts +
STONE_0171:Weaken Precepts ++
STONE_0172:Transcend Precepts
STONE_0173:Transcend Precepts +
STONE_0174:Transcend Precepts ++
STONE_0175:EXP
STONE_0176:EXP +
STONE_0177:EXP ++
STONE_0178:Soulstone Drop
STONE_0179:Soulstone Drop +
STONE_0180:Soulstone Drop ++
STONE_0181:Weapon Drop
STONE_0182:Weapon Drop +
STONE_0183:Weapon Drop ++
STONE_0184:Shadestone Drop
STONE_0185:Shadestone Drop +
STONE_0186:Shadestone Drop ++
STONE_0187:Penmy
STONE_0188:Marine Penmy
STONE_0189:Woodland Penmy
STONE_0190:Vile Penmy
STONE_0191:Loneshroom
STONE_0192:Moanshroom
STONE_0193:Wailshroom
STONE_0194:Sinful Simian
STONE_0195:Primordial Simian
STONE_0196:Apex Simian
STONE_0197:Gloomfish
STONE_0198:Hexfish
STONE_0199:Wrathfish
STONE_0200:Foulfeather
STONE_0201:Midnight Foulfeather
STONE_0202:Twilight Foulfeather
STONE_0203:Jilted Bloom
STONE_0204:Bitter Bloom
STONE_0205:Vexatious Bloom
STONE_0206:Forest Bomber
STONE_0207:Big Bomber
STONE_0208:Spirit Bomber
STONE_0209:Pentaur
STONE_0210:Crotaur
STONE_0211:Gretaur
STONE_0212:Gee
STONE_0213:Guu
STONE_0214:Jabberite
STONE_0215:Ripperite
STONE_0216:Chopperite
STONE_0217:Jabberite Breeder
STONE_0218:Ripperite Breeder
STONE_0219:Chopperite Breeder
STONE_0220:Rigidillo
STONE_0221:Bizarradillo
STONE_0222:Archidillo
STONE_0223:Debauchion Drudge
STONE_0224:Debauchion Queen
STONE_0225:Debauchion Mygalomorph
STONE_0226:Deadeye Pummeler
STONE_0227:Flamerock Pummeler
STONE_0228:Havoc Pummeler
STONE_0229:Land Lurker
STONE_0230:Abyss Lurker
STONE_0231:Hexer
STONE_0232:Hexbinder
STONE_0233:Hexcantor
STONE_0234:Hornonoke
STONE_0235:Hornonoke Brawler
STONE_0236:Hornonoke Heavy
STONE_0237:The Greatshield
STONE_0238:The Blightshield
STONE_0239:Devourer of the Lost
STONE_0240:Devourer of the Keen
STONE_0241:The Iron Hammer
STONE_0242:The Horrid Hammer
STONE_0243:Wildwych
STONE_0244:She-Who-Embraces
STONE_0245:She-Who-Shuns
STONE_0246:The Swarm
STONE_0247:The Defiler
STONE_0248:The Capricious
STONE_0249:The Ruminator
STONE_0250:Wingthrax
STONE_0251:Goldthrax
STONE_0252:Kengu Earthtotem
STONE_0253:Shugo Bloodtotem
STONE_0254:The Great Chariot
STONE_0255:The Blood Chariot
STONE_0256:Oni
STONE_0257:Tsukumo
</DropDownList>
					  <VariableType>String</VariableType>
					  <Length>10</Length>
					  <Unicode>1</Unicode>
					  <ZeroTerminate>1</ZeroTerminate>
					  <Address>OverrideStoneItemID</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>4018</ID>
					  <Description>"Perform Override Item Drop With Stone You Picked"</Description>
					  <Options moHideChildren="1"/>
					  <VariableType>Auto Assembler Script</VariableType>
					  <AssemblerScript>[ENABLE]
{$lua}
writeInteger(getAddress("PerformOverrideStone"),1)
{$asm}
    
[DISABLE]

</AssemblerScript>
					</CheatEntry>					
				  </CheatEntries>
				</CheatEntry>
		  </CheatEntries>
		</CheatEntry>
      </CheatEntries>
	</CheatEntry>
</CheatEntries>
<LuaScript>
function lua_aobscan(name,module,bytes,index)
  index = index - 1
  if(module == "") then
    local resultSet = AOBScan(bytes)
      if(resultSet == nil) then
        unregisterSymbol(name)
        print(name.." not found")
      else
        unregisterSymbol(name)
        registerSymbol(name,resultSet[index])
        resultSet.destroy()
      end
  else
    if(getModuleSize(module) == nil) then
      print("Module "..module.." not found")
    else
      local memScanner = createMemScan()
      local memFoundList = createFoundList(memScanner)
      memScanner.firstScan(
        soExactValue,vtByteArray,rtRounded,bytes,nil,
        getAddress(module),(getAddress(module)+getModuleSize(module)),"",
        fsmNotAligned,"",true,false,false,false)
      memScanner.waitTillDone()
      memFoundList.initialize()
        if(memFoundList.Count == 0) then
          unregisterSymbol(name)
          print(name.." in module "..module.." not found")
        else
          unregisterSymbol(name)
          registerSymbol(name,memFoundList.Address[index])
        end
      memScanner.destroy()
      memFoundList.destroy()
    end
  end
end
</LuaScript>	
</CheatTable>
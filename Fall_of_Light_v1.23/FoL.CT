<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="26">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"enable"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
{$lua}
LaunchMonoDataCollector()
{$asm}

aobscanregion(defenseInputChkAOB,Teseo:DefenseInput,Teseo:DefenseInput+151,48 8B ** ** ** ** ** 48 8B C8 BA ** ** ** ** 48)
registersymbol(defenseInputChkAOB)

label(bDeactiveShadowMode)
registersymbol(bDeactiveShadowMode)
label(pPlayer)
registersymbol(pPlayer)
label(pLantern)
registersymbol(pLantern)

alloc(newmem,2048,Teseo:Update) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pPlayer],rcx

originalcode:
push rbp
mov rbp,rsp
push rsi

exit:
jmp returnhere

///
bDeactiveShadowMode:
dd 0
pPlayer:
dq 0
pLantern:
dq 0
///

Teseo:Update:
jmp newmem
returnhere:

///****************************************///

label(pArianna)
registersymbol(pArianna)

alloc(newmem2,2048,Arianna:Update)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pArianna],rcx

originalcode2:
push rbp
mov rbp,rsp
push rsi

exit2:
jmp returnhere2

///
pArianna:
///

Arianna:Update:
jmp newmem2
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
Teseo:Update:
db 55 48 8B EC 56
//Alt: push rbp
//Alt: mov rbp,rsp
//Alt: push rsi

unregistersymbol(bDeactiveShadowMode)
unregistersymbol(pPlayer)
unregistersymbol(pLantern)

///****************************************///

dealloc(newmem2)
Arianna:Update:
db 55 48 8B EC 56
//Alt: push rbp
//Alt: mov rbp,rsp
//Alt: push rsi
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>41</ID>
          <Description>"no damage"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
{$lua}
LaunchMonoDataCollector()
{$asm}

aobscanregion(noDamageFlagChkOnReduceHealthAOB,Invector:vCharacter:ReduceHealth,Invector:vCharacter:ReduceHealth+37,0F B6 47 6F)
registersymbol(noDamageFlagChkOnReduceHealthAOB)

noDamageFlagChkOnReduceHealthAOB+3: //Invector:vCharacter:ReduceHealth+13:
db 6A


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
noDamageFlagChkOnReduceHealthAOB+3: //Invector:vCharacter:ReduceHealth+13:
db 6F
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"undead"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
{$lua}
LaunchMonoDataCollector()
{$asm}

define(minhealthdefault,#1)

aobscanregion(healthWriteOnReduceHealthAOB,Invector:vCharacter:ReduceHealth,Invector:vCharacter:ReduceHealth+37,89 47 ** 85 C0)
registersymbol(healthWriteOnReduceHealthAOB)

label(bAriannaUndead)
registersymbol(bAriannaUndead)
label(dMinHealth)
registersymbol(dMinHealth)

alloc(newmem,2048,healthWriteOnReduceHealthAOB) //Invector:vCharacter:ReduceHealth+20)
label(returnhere)
label(originalcode_undead)
registersymbol(originalcode_undead)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push rcx
mov rcx,pPlayer
cmp [rcx],rdi
je dominhealth

@@:
mov rcx,bAriannaUndead
cmp byte ptr [rcx],1
jne @f
mov rcx,pArianna
cmp [rcx],rdi
je dominhealth

@@:
jmp end

dominhealth:
mov rcx,dMinHealth
cmp [rcx],eax
jle @f
mov eax,[rcx]

end:
pop rcx

originalcode_undead:
readmem(healthWriteOnReduceHealthAOB,5)
//mov [rdi+4C],eax
//test eax,eax

exit:
jmp returnhere

///
bAriannaUndead:
dd 0
dMinHealth:
dd minhealthdefault
///

healthWriteOnReduceHealthAOB: //Invector:vCharacter:ReduceHealth+20:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthWriteOnReduceHealthAOB: //Invector:vCharacter:ReduceHealth+20:
readmem(originalcode_undead,5)
//db 89 47 4C 85 C0
//Alt: mov [rdi+4C],eax
//Alt: test eax,eax

unregistersymbol(bAriannaUndead)
unregistersymbol(dMinHealth)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>100</ID>
              <Description>"status"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:father only
1:father and daughter
</DropDownList>
              <LastState Value="0" RealAddress="097B0070"/>
              <Color>008000</Color>
              <VariableType>Byte</VariableType>
              <Address>bAriannaUndead</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>30</ID>
          <Description>"full stamina"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
{$lua}
LaunchMonoDataCollector()
{$asm}

aobscanregion(staminaWriteOnReduceStaminaAOB,Invector:vCharacter:ReduceStamina,Invector:vCharacter:ReduceStamina+9e,F3 0F 11 ** ** EB ** F3 0F 10)
registersymbol(staminaWriteOnReduceStaminaAOB)

alloc(newmem,2048,staminaWriteOnReduceStaminaAOB) //Invector:vCharacter:ReduceStamina+4e)
label(returnhere)
label(originalcode_fullstamina)
registersymbol(originalcode_fullstamina)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push rax
mov rax,pPlayer
cmp [rax],rdi
pop rax
jne @f
db 48 8D 47
readmem(staminaWriteOnReduceStaminaAOB+4,1)
//lea rax,[rdi+5c]
movss xmm5,[rax-4]

originalcode_fullstamina:
readmem(staminaWriteOnReduceStaminaAOB,5)
//movss [rdi+5C],xmm5

exit:
jmp returnhere

///

staminaWriteOnReduceStaminaAOB: //Invector:vCharacter:ReduceStamina+4e:
jmp newmem
returnhere:

///******************************************///

aobscanregion(staminaReadOnUpdateHpAndStaminaAOB,CharacterHud:UpdateHpAndStamina,CharacterHud:UpdateHpAndStamina+155,F3 0F 10 ** ** F3 0F 5A C0 48)
registersymbol(staminaReadOnUpdateHpAndStaminaAOB)

alloc(newmem2,2048,staminaReadOnUpdateHpAndStaminaAOB) //CharacterHud:UpdateHpAndStamina+112)
label(returnhere2)
label(originalcode2_fullstamina)
registersymbol(originalcode2_fullstamina)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push rax
mov rax,pPlayer
cmp [rax],rcx
jne end2

mov rax,bDeactiveShadowMode
cmp byte ptr [rax],1
jne @f
mov byte ptr [rax],0
xorps xmm1,xmm1
movss [rcx+5c],xmm1
jmp end2

@@:
movss xmm1,[rcx+58]
movss [rcx+5c],xmm1

end2:
pop rax

originalcode2_fullstamina:
readmem(staminaReadOnUpdateHpAndStaminaAOB,5)
//movss xmm0,[rcx+5C]

exit2:
jmp returnhere2

///

staminaReadOnUpdateHpAndStaminaAOB: //CharacterHud:UpdateHpAndStamina+112:
jmp newmem2
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
staminaWriteOnReduceStaminaAOB: //Invector:vCharacter:ReduceStamina+4e:
readmem(originalcode_fullstamina,5)
//db F3 0F 11 6F 5C
//Alt: movss [rdi+5C],xmm5

unregistersymbol(originalcode_fullstamina)

///******************************************///

dealloc(newmem2)
staminaReadOnUpdateHpAndStaminaAOB: //CharacterHud:UpdateHpAndStamina+112:
readmem(originalcode2_fullstamina,5)
//db F3 0F 10 41 5C
//Alt: movss xmm0,[rcx+5C]

unregistersymbol(originalcode2_fullstamina)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>68</ID>
              <Description>"Shadow Mode switch"</Description>
              <LastState Activated="1"/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
{$lua}
LaunchMonoDataCollector()
{$asm}

aobscanregion(boostModeFlagChkOnBMActivateAOB,BlackMedallion:ActivateBoostMode,BlackMedallion:ActivateBoostMode+124,0F B6 ** ** 85 C0 0F ** ** ** ** ** 48)
registersymbol(boostModeFlagChkOnBMActivateAOB)

alloc(newmem,2048,boostModeFlagChkOnBMActivateAOB) //BlackMedallion:ActivateBoostMode+37)
label(returnhere)
label(originalcode_shadowmodeswitch)
registersymbol(originalcode_shadowmodeswitch)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push rcx
mov rcx,bDeactiveShadowMode
readmem(boostModeFlagChkOnBMActivateAOB,6)
//mov al,[rsi+74]
mov [rcx],al
pop rcx

originalcode_shadowmodeswitch:
readmem(boostModeFlagChkOnBMActivateAOB,6)
//movzx eax,byte ptr [rsi+74]
//test eax,eax

exit:
jmp returnhere

///

boostModeFlagChkOnBMActivateAOB: //BlackMedallion:ActivateBoostMode+37:
jmp newmem
nop
returnhere:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
boostModeFlagChkOnBMActivateAOB: //BlackMedallion:ActivateBoostMode+37:
readmem(originalcode_shadowmodeswitch,6)
//db 0F B6 46 74 85 C0
//Alt: movzx eax,byte ptr [rsi+74]
//Alt: test eax,eax

unregistersymbol(originalcode_shadowmodeswitch)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>110</ID>
          <Description>"full stamina - Aether"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanregion(AriannaStaminaRead2AOB,Arianna:UpdateAnimatorVariables,Arianna:UpdateAnimatorVariables+454,F3 0F 10 ** ** F3 0F 5A C0 48 8B C8)
registersymbol(AriannaStaminaRead2AOB)

alloc(newmem,2048,AriannaStaminaRead2AOB) //Arianna:UpdateAnimatorVariables+3a1)
label(returnhere)
label(originalcode_fullstaminaarianna)
registersymbol(originalcode_fullstaminaarianna)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
db 48 8D 4E
readmem(AriannaStaminaRead2AOB+4,1)
//lea rcx,[rsi+5c]
movss xmm0,[rcx-4]
db F3 0F 11
readmem(AriannaStaminaRead2AOB+3,2)
//movss [rsi+5c],xmm0

originalcode_fullstaminaarianna:
readmem(AriannaStaminaRead2AOB,5)
//movss xmm0,[rsi+5C]

exit:
jmp returnhere

///

AriannaStaminaRead2AOB: //Arianna:UpdateAnimatorVariables+3a1:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
AriannaStaminaRead2AOB: //Arianna:UpdateAnimatorVariables+3a1:
readmem(originalcode_fullstaminaarianna,5)
//db F3 0F 10 46 5C
//Alt: movss xmm0,[rsi+5C]

unregistersymbol(originalcode_fullstaminaarianna)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>126</ID>
          <Description>"alt attack movesets"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanregion(attackMoveSetReadOnNormalAttackAOB,Teseo:NormalAttack,Teseo:NormalAttack+196,4C 63 ** ** ** ** ** 48 8B C8 )
registersymbol(attackMoveSetReadOnNormalAttackAOB)

label(bAttackMoveSetFullOverride)
registersymbol(bAttackMoveSetFullOverride)

alloc(newmem,2048,attackMoveSetReadOnNormalAttackAOB) //Teseo:NormalAttack+f5)
label(returnhere)
label(originalcode_altmoveset)
registersymbol(originalcode_altmoveset)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push rax
push r11

readmem(defenseInputChkAOB,39)
mov r8,eax

pop r11
pop rax

mov rcx,bAttackMoveSetFullOverride
cmp byte ptr [rcx],1
je exit
test r8,r8
jnz exit

originalcode_altmoveset:
readmem(attackMoveSetReadOnNormalAttackAOB,7)
//movsxd  r8,dword ptr [rdi+000001BC]

exit:
jmp returnhere

///
bAttackMoveSetFullOverride:
dd 1
///

attackMoveSetReadOnNormalAttackAOB: //Teseo:NormalAttack+f5:
jmp newmem
nop
nop
returnhere:

///***********************************************///

aobscanregion(attackMoveSetReadOnHeavyAttackAOB,Teseo:HeavyAttack,Teseo:HeavyAttack+19c,4C 63 ** ** ** ** ** 48 8B C8 )
registersymbol(attackMoveSetReadOnHeavyAttackAOB)

alloc(newmem2,2048,attackMoveSetReadOnHeavyAttackAOB) //Teseo:HeavyAttack+fb)
label(returnhere2)
label(originalcode2_altmoveset)
registersymbol(originalcode2_altmoveset)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push rax
push r11

readmem(defenseInputChkAOB,39)
mov r8,eax

pop r11
pop rax

mov rcx,bAttackMoveSetFullOverride
cmp byte ptr [rcx],1
je exit2
test r8,r8
jnz exit2

originalcode2_altmoveset:
readmem(attackMoveSetReadOnHeavyAttackAOB,7)
//movsxd  r8,dword ptr [rdi+000001BC]

exit2:
jmp returnhere2

///

attackMoveSetReadOnHeavyAttackAOB: //Teseo:HeavyAttack+fb:
jmp newmem2
nop
nop
returnhere2:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
attackMoveSetReadOnNormalAttackAOB: //Teseo:NormalAttack+f5:
readmem(originalcode_altmoveset,7)
//db 4C 63 87 BC 01 00 00
//Alt: movsxd  r8,dword ptr [rdi+000001BC]

unregistersymbol(originalcode_altmoveset)
unregistersymbol(bAttackMoveSetFullOverride)

///***********************************************///

dealloc(newmem2)
attackMoveSetReadOnHeavyAttackAOB: //Teseo:HeavyAttack+fb:
readmem(originalcode2_altmoveset,7)
//db 4C 63 87 BC 01 00 00
//Alt: movsxd  r8,dword ptr [rdi+000001BC]

unregistersymbol(originalcode2_altmoveset)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>127</ID>
              <Description>"hold defence button/key"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>125</ID>
              <Description>"affest Shadow Mode?"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:no
1:yes
</DropDownList>
              <LastState Value="1" RealAddress="8A260061"/>
              <Color>008000</Color>
              <VariableType>Byte</VariableType>
              <Address>bAttackMoveSetFullOverride</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>112</ID>
          <Description>"auto 360° block"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanregion(chkShieldBlockableAOB,Teseo:BlockAttack,Teseo:BlockAttack+4b5,41 0F B6 ** ** ** ** ** 85 C0)
registersymbol(chkShieldBlockableAOB)

alloc(newmem,2048,chkShieldBlockableAOB) //Teseo:BlockAttack+15c)
label(returnhere)
label(originalcode_shieldautoblock)
registersymbol(originalcode_shieldautoblock)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,1
mov r14d,eax
jmp exit

originalcode_shieldautoblock:
readmem(chkShieldBlockableAOB,8)
//movzx eax,byte ptr [r15+0000008A]

exit:
jmp returnhere

///

chkShieldBlockableAOB: //Teseo:BlockAttack+15c:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
chkShieldBlockableAOB: //Teseo:BlockAttack+15c:
readmem(originalcode_shieldautoblock,8)
//db 41 0F B6 87 8A 00 00 00
//Alt: movzx eax,byte ptr [r15+0000008A]

unregistersymbol(originalcode_shieldautoblock)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>128</ID>
              <Description>"need shield"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>73</ID>
          <Description>"ignore lantern oil"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
{$lua}
LaunchMonoDataCollector()
{$asm}

aobscanregion(oilChkOnLanternTurnOnAOB,Lantern:TurnOn,Lantern:TurnOn+a9,F3 0F 5A C0 F2 0F 5A E8 F3)
registersymbol(oilChkOnLanternTurnOnAOB)

alloc(newmem,2048,oilChkOnLanternTurnOnAOB) //Lantern:TurnOn+14)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pLantern],rsi
push rax
mov eax,(float)0.1
movd xmm1,eax
pop rax
comiss xmm0,xmm1
jae @f
movss xmm0,xmm1
//movss [rsi+8c],xmm1

originalcode:
cvtss2sd xmm0,xmm0
cvtsd2ss xmm5,xmm0

exit:
jmp returnhere

///

oilChkOnLanternTurnOnAOB: //Lantern:TurnOn+14:
jmp newmem
nop
nop
nop
returnhere:

///********************************///

aobscanregion(oilWriteOnConsumeAOB,Lantern:Consume,Lantern:Consume+12f,F3 0F 11 ** ** ** ** ** F3 0F 10 ** ** ** ** ** F3 0F 5A C0)
registersymbol(oilWriteOnConsumeAOB)

alloc(newmem2,2048,oilWriteOnConsumeAOB+8) //Lantern:Consume+c3)
label(returnhere2)
label(originalcode2_ignorelanternoil)
registersymbol(originalcode2_ignorelanternoil)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pLantern],rsi
push rax
mov eax,(float)0.1
movd xmm0,eax
pop eax
comiss xmm5,xmm0
jb exit2

originalcode2_ignorelanternoil:
readmem(oilWriteOnConsumeAOB+8,8)
//movss xmm0,[rsi+0000008C]

exit2:
jmp returnhere2

///

oilWriteOnConsumeAOB+8: //Lantern:Consume+c3:
jmp newmem2
nop
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
oilChkOnLanternTurnOnAOB: //Lantern:TurnOn+14:
db F3 0F 5A C0 F2 0F 5A E8
//Alt: cvtss2sd xmm0,xmm0
//Alt: cvtsd2ss xmm5,xmm0

///********************************///

dealloc(newmem2)
oilWriteOnConsumeAOB+8: //Lantern:Consume+c3:
readmem(originalcode2_ignorelanternoil,8)
//db F3 0F 10 86 8C 00 00 00
//Alt: movss xmm0,[rsi+0000008C]

unregistersymbol(originalcode2_ignorelanternoil)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>74</ID>
              <Description>"current oil"</Description>
              <LastState Value="-0.004651736468" RealAddress="1CA1D9EC"/>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pLantern</Address>
              <Offsets>
                <Offset>8c</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>60</ID>
          <Description>"ignore Amulet of Shadows charges"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
{$lua}
LaunchMonoDataCollector()
{$asm}

aobscanregion(blackMedalltionSlotChkZeroOnHealAOB,BlackMedallion:Heal,BlackMedallion:Heal+a6,48 63 ** ** 85 C0)
registersymbol(blackMedalltionSlotChkZeroOnHealAOB)

alloc(originalcode_ignorebmslots,4)
registersymbol(originalcode_ignorebmslots)

originalcode_ignorebmslots:
readmem(blackMedalltionSlotChkZeroOnHealAOB,4)
//Alt: movsxd  rax,dword ptr [rsi+70]

///

blackMedalltionSlotChkZeroOnHealAOB: //BlackMedallion:Heal+37:
db 90 90 90 90

///**********************************************************///

aobscanregion(blackMedalltionSlotWritesOnHealAOB,BlackMedallion:Heal,BlackMedallion:Heal+a6,FF C8 89 ** ** 48)
registersymbol(blackMedalltionSlotWritesOnHealAOB)

alloc(newmem2,2048,blackMedalltionSlotWritesOnHealAOB+2) //BlackMedallion:Heal+3c)
label(returnhere2)
label(originalcode2_ignorebmslots)
registersymbol(originalcode2_ignorebmslots)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
jns @f
xor eax,eax

originalcode2_ignorebmslots:
readmem(blackMedalltionSlotWritesOnHealAOB+2,7)
//mov [rsi+70],eax
//mov rax,[rsi+40]

exit2:
jmp returnhere2

///

blackMedalltionSlotWritesOnHealAOB+2: //BlackMedallion:Heal+3c:
jmp newmem2
nop
nop
returnhere2:

///**********************************************************///

aobscanregion(blackMedalltionSlotChkZero1OnShadowModeUseAOB,Teseo:BlackMedallionInput,Teseo:BlackMedallionInput+109,48 0F B6 C0 85 C0 74 )
registersymbol(blackMedalltionSlotChkZero1OnShadowModeUseAOB)

alloc(originalcode6_ignorebmslots,4)
registersymbol(originalcode6_ignorebmslots)

originalcode6_ignorebmslots:
readmem(blackMedalltionSlotChkZero1OnShadowModeUseAOB+6,2)

///

blackMedalltionSlotChkZero1OnShadowModeUseAOB+6: //Teseo:BlackMedallionInput+92:
db 90 90

///**********************************************************///

aobscanregion(blackMedalltionSlotChkZero2OnShadowModeUseAOB,BlackMedallion:ActivateBoostMode,BlackMedallion:ActivateBoostMode+124,48 63 ** ** 85 C0)
registersymbol(blackMedalltionSlotChkZero2OnShadowModeUseAOB)

blackMedalltionSlotChkZero2OnShadowModeUseAOB+5: //BlackMedallion:ActivateBoostMode+3b:
db F6

///**********************************************************///

aobscanregion(blackMedalltionSlotWritesOnShadowModeUseAOB,BlackMedallion:ActivateBoostMode,BlackMedallion:ActivateBoostMode+124,FF C8 89 ** ** 48)
registersymbol(blackMedalltionSlotWritesOnShadowModeUseAOB)

alloc(newmem17,2048,blackMedalltionSlotWritesOnShadowModeUseAOB+2) //BlackMedallion:ActivateBoostMode+48)
label(returnhere17)
label(originalcode17_ignorebmslots)
registersymbol(originalcode17_ignorebmslots)
label(exit17)

newmem17: //this is allocated memory, you have read,write,execute access
//place your code here
jns @f
xor eax,eax

originalcode17_ignorebmslots:
readmem(blackMedalltionSlotWritesOnShadowModeUseAOB+2,7)
//mov [rsi+70],eax
//mov rax,[rsi+40]

exit17:
jmp returnhere17

///

blackMedalltionSlotWritesOnShadowModeUseAOB+2: //BlackMedallion:ActivateBoostMode+48:
jmp newmem17
nop
nop
returnhere17:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
blackMedalltionSlotChkZeroOnHealAOB: //BlackMedallion:Heal+37:
readmem(originalcode_ignorebmslots,4)
//db 48 63 46 70
//Alt: movsxd  rax,dword ptr [rsi+70]

unregistersymbol(originalcode_ignorebmslots)

///**********************************************************///

dealloc(newmem2)
blackMedalltionSlotWritesOnHealAOB+2: //BlackMedallion:Heal+3c:
readmem(originalcode2_ignorebmslots,7)
//db 89 46 70 48 8B 46 40
//Alt: mov [rsi+70],eax
//Alt: mov rax,[rsi+40]

///**********************************************************///

blackMedalltionSlotChkZero1OnShadowModeUseAOB+6: //Teseo:BlackMedallionInput+92:
readmem(originalcode6_ignorebmslots,2)
//db 74 22
//Alt: je Teseo:BlackMedallionInput+b6

dealloc(originalcode6_ignorebmslots)
unregistersymbol(originalcode6_ignorebmslots)

///**********************************************************///

blackMedalltionSlotChkZero2OnShadowModeUseAOB+5: //BlackMedallion:ActivateBoostMode+3b:
db C0

///**********************************************************///

dealloc(newmem17)
blackMedalltionSlotWritesOnShadowModeUseAOB+2: //BlackMedallion:ActivateBoostMode+48:
readmem(originalcode17_ignorebmslots,7)
//db 89 46 70 48 8B 46 40
//Alt: mov [rsi+70],eax
//Alt: mov rax,[rsi+40]

unregistersymbol(originalcode17_ignorebmslots)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>65</ID>
          <Description>"souls gained multiplier"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
{$lua}
LaunchMonoDataCollector()
{$asm}

define(expmultiplierdefault,(float)2)

aobscanregion(getSoulOnEnemyDeadAOB,MultiParticlesMagnet:HealPlayer,MultiParticlesMagnet:HealPlayer+56,F3 0F 10 ** ** F3 0F 5A C0 48 8B C8)
registersymbol(getSoulOnEnemyDeadAOB)

label(dEXPMultiplier)
registersymbol(dEXPMultiplier)

alloc(newmem,2048,getSoulOnEnemyDeadAOB+5) //MultiParticlesMagnet:HealPlayer+25)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov rcx,dEXPMultiplier
mulss xmm0,[rcx]

originalcode:
cvtss2sd xmm0,xmm0
mov rcx,rax

exit:
jmp returnhere

///
dEXPMultiplier:
dd expmultiplierdefault
///

getSoulOnEnemyDeadAOB+5: //MultiParticlesMagnet:HealPlayer+25:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
getSoulOnEnemyDeadAOB+5: //MultiParticlesMagnet:HealPlayer+25:
db F3 0F 5A C0 48 8B C8
//Alt: cvtss2sd xmm0,xmm0
//Alt: mov rcx,rax

unregistersymbol(dEXPMultiplier)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>67</ID>
              <Description>"x?"</Description>
              <LastState Value="2" RealAddress="094B0023"/>
              <Color>008000</Color>
              <VariableType>Float</VariableType>
              <Address>dEXPMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>105</ID>
          <Description>"no jail"</Description>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
{$lua}
LaunchMonoDataCollector()
{$asm}

aobscanregion(kidnapTimeChkAOB,AriannaDementorCircle:Update,AriannaDementorCircle:Update+174,66 0F 57 C9 66 0F 2F C8 0F 86)
registersymbol(kidnapTimeChkAOB)

kidnapTimeChkAOB+8: //AriannaDementorCircle:Update+127:
db 90 E9


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
kidnapTimeChkAOB+8: //AriannaDementorCircle:Update+127:
db 0F 86
//Alt: jbe
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"walk key"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
{$lua}
LaunchMonoDataCollector()
{$asm}

label(bWalkKeyPressed)
registersymbol(bWalkKeyPressed)
label(dCustomSpeed)
registersymbol(dCustomSpeed)

alloc(newmem,2048,Invector:vThirdPersonAnimator:LocomotionAnimation+c7) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov rcx,pPlayer
cmp [rcx],rsi
jne @f
mov rcx,bWalkKeyPressed
cmp byte ptr [rcx],1
jne @f
movss xmm0,[rsi+208]
//mulss xmm0,[dCustomSpeedMultiplier]
mov rcx,dCustomSpeed
comiss xmm0,[rcx]
jbe @f
movss xmm0,[rcx]
jmp exit

originalcode:
movss xmm0,[rsi+00000208]

exit:
jmp returnhere

///
bWalkKeyPressed:
dd 0
dCustomSpeed:
dd (float)0.5
dd (float)3
///

Invector:vThirdPersonAnimator:LocomotionAnimation+c7:
jmp newmem
nop
nop
nop
returnhere:

///***********************************************///

label(bEndThread_FoL_customSpeedKeys_keylistener_mem)
registersymbol(bEndThread_FoL_customSpeedKeys_keylistener_mem)

alloc(FoL_customSpeedKeys_keylistener_mem,2048,"FoL.exe")
registersymbol(FoL_customSpeedKeys_keylistener_mem)
createthread(FoL_customSpeedKeys_keylistener_mem)
label(keylistenerstart)
label(keylistenerend)
label(keylistenerexit)

FoL_customSpeedKeys_keylistener_mem:
sub rsp,28

keylistenerstart:
mov rcx,12 //ALT key
push rcx
call GetAsyncKeyState
add rsp,08
shr ax,#15
cmp ax,1
sete al

mov [bWalkKeyPressed],al

keylistenerend:
mov rcx,#100
call Sleep
cmp dword ptr [bEndThread_FoL_customSpeedKeys_keylistener_mem],1
jne keylistenerstart

keylistenerexit:
add rsp,28
mov dword ptr [bEndThread_FoL_customSpeedKeys_keylistener_mem],2
ret

///
bEndThread_FoL_customSpeedKeys_keylistener_mem:
dd 0
///


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
//obtained from SubBeam's ACS script - start//
{$lua}

if( syntaxcheck == false ) then --actual execution
  local starttime = getTickCount()

if readInteger( "bEndThread_FoL_customSpeedKeys_keylistener_mem" ) == 0 then --could be 2 already
  writeInteger( "bEndThread_FoL_customSpeedKeys_keylistener_mem", 1 ) --tell the thread to kill itself
end

while( getTickCount() &lt; starttime + 1000 ) and ( readInteger( "bEndThread_FoL_customSpeedKeys_keylistener_mem" ) ~=2 ) do --wait till it has finished
  sleep( 20 )
end

if( getTickCount() &gt; starttime + 1000 ) then --could happen when the window is shown
  showMessage( 'Disabling the thread failed!' )
  error( 'Thread disabling failed!' )
end
  sleep( 1 )
end

{$asm}
//obtained from SubBeam's ACS script - end//

//bEndThread_FoL_customSpeedKeys_keylistener_mem:
//dd 1

///***********************************************///

dealloc(newmem)
Invector:vThirdPersonAnimator:LocomotionAnimation+c7:
db F3 0F 10 86 08 02 00 00
//Alt: movss xmm0,[rsi+00000208]

unregistersymbol(bWalkKeyPressed)
unregistersymbol(dCustomSpeed)

///***********************************************///

unregistersymbol(bEndThread_FoL_customSpeedKeys_keylistener_mem)

dealloc(FoL_customSpeedKeys_keylistener_mem)
unregistersymbol(FoL_customSpeedKeys_keylistener_mem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>45</ID>
              <Description>"hold Alt"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"[pointers]"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <Color>000080</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>1</ID>
              <Description>"[Player]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="1" RealAddress="1C9C1000"/>
              <Color>000080</Color>
              <VariableType>Array of byte</VariableType>
              <ByteLength>0</ByteLength>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>2</ID>
                  <Description>"maxHealth"</Description>
                  <LastState Value="13" RealAddress="1C9C1048"/>
                  <Color>0000FF</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+48</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>3</ID>
                  <Description>"currentHealth"</Description>
                  <LastState Value="8" RealAddress="1C9C104C"/>
                  <Color>0000FF</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+4c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>4</ID>
                  <Description>"healthRecovery"</Description>
                  <LastState Value="0" RealAddress="1C9C1050"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+50</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>5</ID>
                  <Description>"healthRecoveryDelay"</Description>
                  <LastState Value="0" RealAddress="1C9C1054"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+54</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>6</ID>
                  <Description>"maxStamina"</Description>
                  <LastState Value="120" RealAddress="1C9C1058"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+58</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>7</ID>
                  <Description>"currentStamina"</Description>
                  <LastState Value="120" RealAddress="1C9C105C"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+5c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>8</ID>
                  <Description>"staminaRecoveryNormal"</Description>
                  <LastState Value="30" RealAddress="1C9C1060"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+60</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>9</ID>
                  <Description>"staminaRecoveryWhileBlocking"</Description>
                  <LastState Value="5" RealAddress="1C9C1064"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+64</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>10</ID>
                  <Description>"respawnable"</Description>
                  <LastState Value="1" RealAddress="1C9C1068"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+68</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>11</ID>
                  <Description>"affectedByTraps"</Description>
                  <LastState Value="1" RealAddress="1C9C1069"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+69</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>12</ID>
                  <Description>"isPlayer"</Description>
                  <LastState Value="1" RealAddress="1C9C106A"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+6a</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>13</ID>
                  <Description>"lockMovement"</Description>
                  <LastState Value="0" RealAddress="1C9C106B"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+6b</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14</ID>
                  <Description>"immunity"</Description>
                  <LastState Value="0" RealAddress="1C9C106C"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+6c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>15</ID>
                  <Description>"cinematic"</Description>
                  <LastState Value="0" RealAddress="1C9C106D"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+6d</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>16</ID>
                  <Description>"killedByFloor"</Description>
                  <LastState Value="0" RealAddress="1C9C106E"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+6e</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>17</ID>
                  <Description>"&lt;noDamage&gt;"</Description>
                  <LastState Value="0" RealAddress="1C9C106F"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+6f</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>18</ID>
                  <Description>"recoveringStamina"</Description>
                  <LastState Value="0" RealAddress="1C9C1070"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+70</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>19</ID>
                  <Description>"canRecovery"</Description>
                  <LastState Value="0" RealAddress="1C9C1071"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+71</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>20</ID>
                  <Description>"deadTriggered"</Description>
                  <LastState Value="0" RealAddress="1C9C1072"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+72</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>21</ID>
                  <Description>"hitAttackID"</Description>
                  <LastState Value="00000412" RealAddress="1C9C1074"/>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>0000FF</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+74</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>22</ID>
                  <Description>"currentHealthRecoveryDelay"</Description>
                  <LastState Value="0" RealAddress="1C9C1078"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+78</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>23</ID>
                  <Description>"staminaRecoveryDelay"</Description>
                  <LastState Value="-2.399086952E-6" RealAddress="1C9C107C"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+7c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>24</ID>
                  <Description>"isDead"</Description>
                  <LastState Value="0" RealAddress="1C9C1080"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+80</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>36</ID>
                  <Description>"sprinting"</Description>
                  <LastState Value="0" RealAddress="1C9C1092"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+92</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>111</ID>
                  <Description>"blocking"</Description>
                  <LastState Value="0" RealAddress="1C9C108A"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+8a</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>25</ID>
                  <Description>"groundMinDistance"</Description>
                  <LastState Value="0.1000000015" RealAddress="1C9C1144"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+144</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>26</ID>
                  <Description>"groundMaxDistance"</Description>
                  <LastState Value="0.5" RealAddress="1C9C1148"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+148</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>27</ID>
                  <Description>"walkSpeed"</Description>
                  <LastState Value="0" RealAddress="1C9C1150"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+150</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>28</ID>
                  <Description>"runningSpeed"</Description>
                  <LastState Value="1" RealAddress="1C9C1154"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+154</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>29</ID>
                  <Description>"sprintSpeed"</Description>
                  <LastState Value="4" RealAddress="1C9C1158"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+158</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>122</ID>
                  <Description>"attackMoveSet"</Description>
                  <LastState Value="0" RealAddress="1C9C11BC"/>
                  <Color>0000FF</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+1bc</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>32</ID>
                  <Description>"speed"</Description>
                  <LastState Value="0" RealAddress="1C9C1208"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+208</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>33</ID>
                  <Description>"direction"</Description>
                  <LastState Value="-0.1123387739" RealAddress="1C9C120C"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+20c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>34</ID>
                  <Description>"verticalVelocity"</Description>
                  <LastState Value="-0.0593759343" RealAddress="1C9C1210"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+210</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>46</ID>
                  <Description>"[_Amulet of Shadows_]"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" RealAddress="0A04D080"/>
                  <Color>000080</Color>
                  <VariableType>Array of byte</VariableType>
                  <ByteLength>0</ByteLength>
                  <Address>+2a0</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>62</ID>
                      <Description>"_souls_"</Description>
                      <LastState Value="93" RealAddress="AB7A5234"/>
                      <Color>0000FF</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+38</Address>
                      <Offsets>
                        <Offset>24</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>47</ID>
                      <Description>"maxLevels"</Description>
                      <LastState Value="15" RealAddress="0A04D0D8"/>
                      <Color>0000FF</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+58</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>48</ID>
                      <Description>"hpPerPotion"</Description>
                      <LastState Value="5" RealAddress="0A04D0DC"/>
                      <Color>0000FF</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+5c</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>49</ID>
                      <Description>"attackBonus"</Description>
                      <LastState Value="50" RealAddress="0A04D0E0"/>
                      <Color>0000FF</Color>
                      <VariableType>Float</VariableType>
                      <Address>+60</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>50</ID>
                      <Description>"damageMalus"</Description>
                      <LastState Value="50" RealAddress="0A04D0E4"/>
                      <Color>0000FF</Color>
                      <VariableType>Float</VariableType>
                      <Address>+64</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>51</ID>
                      <Description>"staminaDelayAfterBoost"</Description>
                      <LastState Value="2" RealAddress="0A04D0E8"/>
                      <Color>0000FF</Color>
                      <VariableType>Float</VariableType>
                      <Address>+68</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>52</ID>
                      <Description>"staminaConsumeSpeed"</Description>
                      <LastState Value="6" RealAddress="0A04D0EC"/>
                      <Color>0000FF</Color>
                      <VariableType>Float</VariableType>
                      <Address>+6c</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>53</ID>
                      <Description>"_charges_"</Description>
                      <LastState Value="0" RealAddress="0A04D0F0"/>
                      <Color>0000FF</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+70</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>54</ID>
                      <Description>"boostMode"</Description>
                      <LastState Value="0" RealAddress="0A04D0F4"/>
                      <Color>0000FF</Color>
                      <VariableType>Byte</VariableType>
                      <Address>+74</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>75</ID>
              <Description>"[Arianna]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="1C81FD48"/>
              <Color>000080</Color>
              <VariableType>Array of byte</VariableType>
              <ByteLength>0</ByteLength>
              <Address>pArianna</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>76</ID>
                  <Description>"maxHealth"</Description>
                  <LastState Value="1" RealAddress="1C81FD90"/>
                  <Color>0000FF</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+48</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>77</ID>
                  <Description>"currentHealth"</Description>
                  <LastState Value="1" RealAddress="1C81FD94"/>
                  <Color>0000FF</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+4c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>78</ID>
                  <Description>"healthRecovery"</Description>
                  <LastState Value="0" RealAddress="1C81FD98"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+50</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>79</ID>
                  <Description>"healthRecoveryDelay"</Description>
                  <LastState Value="0" RealAddress="1C81FD9C"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+54</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>80</ID>
                  <Description>"maxStamina"</Description>
                  <LastState Value="600" RealAddress="1C81FDA0"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+58</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>81</ID>
                  <Description>"currentStamina"</Description>
                  <LastState Value="600" RealAddress="1C81FDA4"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+5c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>82</ID>
                  <Description>"staminaRecoveryNormal"</Description>
                  <LastState Value="60" RealAddress="1C81FDA8"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+60</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>83</ID>
                  <Description>"staminaRecoveryWhileBlocking"</Description>
                  <LastState Value="0" RealAddress="1C81FDAC"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+64</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>84</ID>
                  <Description>"respawnable"</Description>
                  <LastState Value="1" RealAddress="1C81FDB0"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+68</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>85</ID>
                  <Description>"affectedByTraps"</Description>
                  <LastState Value="1" RealAddress="1C81FDB1"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+69</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>86</ID>
                  <Description>"isPlayer"</Description>
                  <LastState Value="0" RealAddress="1C81FDB2"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+6a</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>87</ID>
                  <Description>"lockMovement"</Description>
                  <LastState Value="0" RealAddress="1C81FDB3"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+6b</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>88</ID>
                  <Description>"immunity"</Description>
                  <LastState Value="0" RealAddress="1C81FDB4"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+6c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>89</ID>
                  <Description>"cinematic"</Description>
                  <LastState Value="0" RealAddress="1C81FDB5"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+6d</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>90</ID>
                  <Description>"killedByFloor"</Description>
                  <LastState Value="0" RealAddress="1C81FDB6"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+6e</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>91</ID>
                  <Description>"&lt;noDamage&gt;"</Description>
                  <LastState Value="0" RealAddress="1C81FDB7"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+6f</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>92</ID>
                  <Description>"recoveringStamina"</Description>
                  <LastState Value="0" RealAddress="1C81FDB8"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+70</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>93</ID>
                  <Description>"canRecovery"</Description>
                  <LastState Value="0" RealAddress="1C81FDB9"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+71</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>94</ID>
                  <Description>"deadTriggered"</Description>
                  <LastState Value="0" RealAddress="1C81FDBA"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+72</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>95</ID>
                  <Description>"hitAttackID"</Description>
                  <LastState Value="FFFFFFFF" RealAddress="1C81FDBC"/>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>0000FF</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+74</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>96</ID>
                  <Description>"currentHealthRecoveryDelay"</Description>
                  <LastState Value="0" RealAddress="1C81FDC0"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+78</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>97</ID>
                  <Description>"staminaRecoveryDelay"</Description>
                  <LastState Value="10" RealAddress="1C81FDC4"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+7c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>98</ID>
                  <Description>"isDead"</Description>
                  <LastState Value="0" RealAddress="1C81FDC8"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+80</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>99</ID>
                  <Description>"sprinting"</Description>
                  <LastState Value="0" RealAddress="1C81FDDA"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+92</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>101</ID>
                  <Description>"kidnapState"</Description>
                  <LastState Value="0" RealAddress="1C81FF70"/>
                  <Color>0000FF</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+228</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>102</ID>
                  <Description>"allowEnemyDamage"</Description>
                  <LastState Value="1" RealAddress="1C81FFB2"/>
                  <Color>0000FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+26a</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>103</ID>
                  <Description>"companionState"</Description>
                  <LastState Value="1" RealAddress="1C81FFB4"/>
                  <Color>0000FF</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+26c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>104</ID>
                  <Description>"wantedState"</Description>
                  <LastState Value="1" RealAddress="1C81FFB8"/>
                  <Color>0000FF</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+270</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>44</ID>
      <Description>""</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanregion(staminaReadOnUpdateHpAndStaminaAOB,CharacterHud:UpdateHpAndStamina,CharacterHud:UpdateHpAndStamina+155,F3 0F 10 ** ** F3 0F 5A C0 48)
registersymbol(staminaReadOnUpdateHpAndStaminaAOB)

alloc(newmem2,2048,staminaReadOnUpdateHpAndStaminaAOB) //CharacterHud:UpdateHpAndStamina+112)
label(returnhere2)
label(originalcode2_fullstamina)
registersymbol(originalcode2_fullstamina)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push rax
mov rax,pPlayer
cmp [rax],rcx
pop rax
jne @f
movss xmm1,[rcx+58]
movss [rcx+5c],xmm1

originalcode2_fullstamina:
readmem(staminaReadOnUpdateHpAndStaminaAOB,5)
//movss xmm0,[rcx+5C]

exit2:
jmp returnhere2

///

staminaReadOnUpdateHpAndStaminaAOB: //CharacterHud:UpdateHpAndStamina+112:
jmp newmem2
returnhere2:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
staminaReadOnUpdateHpAndStaminaAOB: //CharacterHud:UpdateHpAndStamina+112:
readmem(originalcode2_fullstamina,5)
//db F3 0F 10 41 5C
//Alt: movss xmm0,[rcx+5C]

unregistersymbol(originalcode2_fullstamina)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

label(bEndThread_FoL_customSpeedKeys_keylistener_mem)
registersymbol(bEndThread_FoL_customSpeedKeys_keylistener_mem)

alloc(FoL_customSpeedKeys_keylistener_mem,2048,"FoL.exe")
registersymbol(FoL_customSpeedKeys_keylistener_mem)
createthread(FoL_customSpeedKeys_keylistener_mem)
label(keylistenerstart)
label(keylistenerend)
label(keylistenerexit)

FoL_customSpeedKeys_keylistener_mem:
sub rsp,28

keylistenerstart:
mov rcx,12 //ALT key
push rcx
call GetAsyncKeyState
add rsp,08
shr ax,#15
cmp ax,1
sete al

mov [bWalkKeyPressed],al

keylistenerend:
mov rcx,#100
call Sleep
cmp dword ptr [bEndThread_FoL_customSpeedKeys_keylistener_mem],1
jne keylistenerstart

keylistenerexit:
add rsp,28
mov dword ptr [bEndThread_FoL_customSpeedKeys_keylistener_mem],2
ret

///
bEndThread_FoL_customSpeedKeys_keylistener_mem:
dd 0
///
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
//obtained from SubBeam's ACS script - start//
{$lua}

if( syntaxcheck == false ) then --actual execution
  local starttime = getTickCount()

if readInteger( "bEndThread_FoL_customSpeedKeys_keylistener_mem" ) == 0 then --could be 2 already
  writeInteger( "bEndThread_FoL_customSpeedKeys_keylistener_mem", 1 ) --tell the thread to kill itself
end

while( getTickCount() &lt; starttime + 1000 ) and ( readInteger( "bEndThread_FoL_customSpeedKeys_keylistener_mem" ) ~=2 ) do --wait till it has finished
  sleep( 20 )
end

if( getTickCount() &gt; starttime + 1000 ) then --could happen when the window is shown
  showMessage( 'Disabling the thread failed!' )
  error( 'Thread disabling failed!' )
end
  sleep( 1 )
end

{$asm}
//obtained from SubBeam's ACS script - end//

//bEndThread_FoL_customSpeedKeys_keylistener_mem:
//dd 1

///***********************************************///

unregistersymbol(bEndThread_FoL_customSpeedKeys_keylistener_mem)

dealloc(FoL_customSpeedKeys_keylistener_mem)
unregistersymbol(FoL_customSpeedKeys_keylistener_mem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"No Description"</Description>
          <LastState Value="0" RealAddress="1DE20DAC"/>
          <VariableType>Float</VariableType>
          <Address>1DE20DAC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>42</ID>
          <Description>"undead .1"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
{$lua}
LaunchMonoDataCollector()
{$asm}

aobscanregion(healthSetZeroOnReduceHealthAOB,Invector:vCharacter:ReduceHealth,Invector:vCharacter:ReduceHealth+37,C7 47 ** 00 00 00 00)
registersymbol(healthSetZeroOnReduceHealthAOB)

alloc(newmem,2048,healthSetZeroOnReduceHealthAOB) //Invector:vCharacter:ReduceHealth+27)
label(returnhere)
label(originalcode_undead)
registersymbol(originalcode_undead)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movsx eax,byte ptr [rdi+6a]
db 89
readmem(healthSetZeroOnReduceHealthAOB+1,2)
//mov [rdi+4c],eax
jmp exit

originalcode_undead:
readmem(healthSetZeroOnReduceHealthAOB,7)
//mov [rdi+4C],00000000

exit:
jmp returnhere

///

healthSetZeroOnReduceHealthAOB: //Invector:vCharacter:ReduceHealth+27:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthSetZeroOnReduceHealthAOB: //Invector:vCharacter:ReduceHealth+27:
readmem(originalcode_undead,7)
//db C7 47 4C 00 00 00 00
//Alt: mov [rdi+4C],00000000
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>55</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanregion(blackMedalltionSlotChkZeroOnHealAOB,BlackMedallion:Heal,BlackMedallion:Heal+a6,48 63 ** ** 85 C0)
registersymbol(blackMedalltionSlotChkZeroOnHealAOB)

blackMedalltionSlotChkZeroOnHealAOB+5: //BlackMedallion:Heal+2f:
db F6


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
blackMedalltionSlotChkZeroOnHealAOB+5: //BlackMedallion:Heal+2f:
db C0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>56</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanregion(blackMedalltionSlotWritesOnHealAOB,BlackMedallion:Heal,BlackMedallion:Heal+a6,FF C8 89 ** ** 48)
registersymbol(blackMedalltionSlotWritesOnHealAOB)

alloc(newmem,2048,blackMedalltionSlotWritesOnHealAOB+2) //BlackMedallion:Heal+3c)
label(returnhere)
label(originalcode_ignorebmslots)
registersymbol(originalcode_ignorebmslots)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
jns @f
xor eax,eax

originalcode_ignorebmslots:
readmem(blackMedalltionSlotWritesOnHealAOB+2,7)
//mov [rsi+70],eax
//mov rax,[rsi+40]

exit:
jmp returnhere

///

blackMedalltionSlotWritesOnHealAOB+2: //BlackMedallion:Heal+3c:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
blackMedalltionSlotWritesOnHealAOB+2: //BlackMedallion:Heal+3c:
readmem(originalcode_ignorebmslots,7)
//db 89 46 70 48 8B 46 40
//Alt: mov [rsi+70],eax
//Alt: mov rax,[rsi+40]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>57</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanregion(blackMedalltionSlotChkZero1OnShadowModeUseAOB,Teseo:BlackMedallionInput,Teseo:BlackMedallionInput+109,48 0F B6 C0 85 C0 74 )
registersymbol(blackMedalltionSlotChkZero1OnShadowModeUseAOB)

alloc(originalcode2_ignorebmslots,4)
registersymbol(originalcode2_ignorebmslots)

originalcode2_ignorebmslots:
readmem(blackMedalltionSlotChkZero1OnShadowModeUseAOB+6,2)

///

blackMedalltionSlotChkZero1OnShadowModeUseAOB+6: //Teseo:BlackMedallionInput+92:
db 90 90


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
blackMedalltionSlotChkZero1OnShadowModeUseAOB+6: //Teseo:BlackMedallionInput+92:
readmem(originalcode2_ignorebmslots,2)
//db 74 22
//Alt: je Teseo:BlackMedallionInput+b6

unregistersymbol(originalcode2_ignorebmslots)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>58</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanregion(blackMedalltionSlotChkZero2OnShadowModeUseAOB,BlackMedallion:ActivateBoostMode,BlackMedallion:ActivateBoostMode+124,48 63 ** ** 85 C0)
registersymbol(blackMedalltionSlotChkZero2OnShadowModeUseAOB)

blackMedalltionSlotChkZero2OnShadowModeUseAOB+5: //BlackMedallion:ActivateBoostMode+3b:
db F6


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
blackMedalltionSlotChkZero2OnShadowModeUseAOB+5: //BlackMedallion:ActivateBoostMode+3b:
db C0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>59</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

aobscanregion(blackMedalltionSlotWritesOnShadowModeUseAOB,BlackMedallion:ActivateBoostMode,BlackMedallion:ActivateBoostMode+124,FF C8 89 ** ** 48)
registersymbol(blackMedalltionSlotWritesOnShadowModeUseAOB)

alloc(newmem6,2048,blackMedalltionSlotWritesOnShadowModeUseAOB+2) //BlackMedallion:ActivateBoostMode+48)
label(returnhere6)
label(originalcode6_ignorebmslots)
registersymbol(originalcode6_ignorebmslots)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
jns @f
xor eax,eax

originalcode6_ignorebmslots:
readmem(blackMedalltionSlotWritesOnShadowModeUseAOB+2,7)
//mov [rsi+70],eax
//mov rax,[rsi+40]

exit6:
jmp returnhere6

///

blackMedalltionSlotWritesOnShadowModeUseAOB+2: //BlackMedallion:ActivateBoostMode+48:
jmp newmem6
nop
nop
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
blackMedalltionSlotWritesOnShadowModeUseAOB+2: //BlackMedallion:ActivateBoostMode+48:
readmem(originalcode6_ignorebmslots,7)
//db 89 46 70 48 8B 46 40
//Alt: mov [rsi+70],eax
//Alt: mov rax,[rsi+40]

unregistersymbol(originalcode6_ignorebmslots)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>61</ID>
          <Description>"accumulatedEnergy"</Description>
          <LastState Value="0000000000000000" RealAddress="18ECB0B8"/>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>8 Bytes</VariableType>
          <Address>18ECB0B8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63</ID>
          <Description>"Item[1]"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>18ECB098</Address>
          <Offsets>
            <Offset>18</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>64</ID>
          <Description>"Item[2]"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>18ECB098</Address>
          <Offsets>
            <Offset>24</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>66</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanregion(blackMedalltionSlotChkZero2OnShadowModeUseAOB,BlackMedallion:ActivateBoostMode,BlackMedallion:ActivateBoostMode+124,48 63 ** ** 85 C0)
registersymbol(blackMedalltionSlotChkZero2OnShadowModeUseAOB)

alloc(originalcode11_ignorebmslots,4)
registersymbol(originalcode11_ignorebmslots)

originalcode11_ignorebmslots:
readmem(blackMedalltionSlotChkZero2OnShadowModeUseAOB,4)
//Alt: movsxd  rax,dword ptr [rsi+70]

///

blackMedalltionSlotChkZero2OnShadowModeUseAOB: //BlackMedallion:ActivateBoostMode+43:
db 90 90 90 90



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
blackMedalltionSlotChkZero2OnShadowModeUseAOB: //BlackMedallion:ActivateBoostMode+43:
readmem(originalcode11_ignorebmslots,4)
//db 48 63 46 70
//Alt: movsxd  rax,dword ptr [rsi+70]

dealloc(originalcode11_ignorebmslots)
unregistersymbol(originalcode11_ignorebmslots)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>69</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
Lantern:Consume+31:
db E4


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
Lantern:Consume+31:
db C0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>70</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
Lantern:Consume+5e:
db 90 90 90 90 90 90 90 90 90 90 90 90


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
Lantern:Consume+5e:
db 0F 8A C5 00 00 00 0F 83 BF 00 00 00
//Alt: jp Lantern:Consume+129
//Alt: jae Lantern:Consume+129
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>71</ID>
          <Description>"No Description"</Description>
          <LastState Value="-1.069656014" RealAddress="2284A9EC"/>
          <VariableType>Float</VariableType>
          <Address>2284A9EC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>40</ID>
          <Description>"inf lantern oil"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
{$lua}
LaunchMonoDataCollector()
{$asm}

define(minoildefault,(float)0.1)

aobscanregion(oilWriteOnConsumeAOB,Lantern:Consume,Lantern:Consume+12f,F3 0F 11 ** ** ** ** ** F3 0F 10 ** ** ** ** ** F3 0F 5A C0)
registersymbol(oilWriteOnConsumeAOB)

label(dMinOil)
registersymbol(dMinOil)

alloc(newmem,2048,oilWriteOnConsumeAOB) //Lantern:Consume+bb)
label(returnhere)
label(originalcode_infoil)
registersymbol(originalcode_infoil)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pLantern],rsi
push rax
mov rax,dMinOil
comiss xmm5,[rax]
jae @f
movss xmm5,[rax]

@@:
pop rax

originalcode_infoil:
readmem(oilWriteOnConsumeAOB,8)
//movss [rsi+0000008C],xmm5

exit:
jmp returnhere

///
dMinOil:
dd minoildefault
///

oilWriteOnConsumeAOB: //Lantern:Consume+bb:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
oilWriteOnConsumeAOB: //Lantern:Consume+bb:
readmem(originalcode_infoil,8)
//db F3 0F 11 AE 8C 00 00 00
//Alt: movss [rsi+0000008C],xmm5

unregistersymbol(originalcode_infoil)
unregistersymbol(dMinOil)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>72</ID>
              <Description>"current oil"</Description>
              <LastState Value="-0.004651736468" RealAddress="1CA1D9EC"/>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pLantern</Address>
              <Offsets>
                <Offset>8c</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>106</ID>
          <Description>"ignore lantern oil .1"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,Lantern:TurnOn+14) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pLantern],rsi
push rax
mov eax,(float)0.1
movd xmm1,eax
pop rax
comiss xmm0,xmm1
jae @f
movss xmm0,xmm1
//movss [rsi+8c],xmm1

originalcode:
cvtss2sd xmm0,xmm0
cvtsd2ss xmm5,xmm0

exit:
jmp returnhere

///

Lantern:TurnOn+14:
jmp newmem
nop
nop
nop
returnhere:

///********************************///

alloc(newmem2,2048,Lantern:Consume+cb)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pLantern],rsi
push rax
mov eax,(float)0.1
movd xmm1,eax
pop rax
comiss xmm0,xmm1
jae @f
movss xmm0,xmm1
//movss [rsi+8c],xmm1

originalcode2:
cvtss2sd xmm0,xmm0
cvtsd2ss xmm5,xmm0

exit2:
jmp returnhere2

///

Lantern:Consume+cb:
jmp newmem2
nop
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
Lantern:TurnOn+14:
db F3 0F 5A C0 F2 0F 5A E8
//Alt: cvtss2sd xmm0,xmm0
//Alt: cvtsd2ss xmm5,xmm0

///********************************///

dealloc(newmem2)
Lantern:Consume+cb:
db F3 0F 5A C0 F2 0F 5A E8
//Alt: cvtss2sd xmm0,xmm0
//Alt: cvtsd2ss xmm5,xmm0
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>107</ID>
              <Description>"current oil"</Description>
              <LastState Value="-0.004651736468" RealAddress="1CA1D9EC"/>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pLantern</Address>
              <Offsets>
                <Offset>8c</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>108</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanregion(AriannaStaminaRead1AOB,Arianna:UpdateBreathless,Arianna:UpdateBreathless+355,E9 ** ** ** ** F3 0F 10 ** ** F3 0F 5A C0 F3 0F 10 ** ** F3)
registersymbol(AriannaStaminaRead1AOB)

alloc(originalcode_fullstaminaarianna,4)
registersymbol(originalcode_fullstaminaarianna)

originalcode_fullstaminaarianna:
readmem(AriannaStaminaRead1AOB+9,1)

///

AriannaStaminaRead1AOB+9: //Arianna:UpdateBreathless+1e1:
readmem(AriannaStaminaRead1AOB+12,1)
//db 58


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
AriannaStaminaRead1AOB+9: //Arianna:UpdateBreathless+1e1:
readmem(originalcode_fullstaminaarianna,1)
//db 5C
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>109</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanregion(AriannaStaminaRead1AOB,Arianna:UpdateBreathless,Arianna:UpdateBreathless+355,E9 ** ** ** ** F3 0F 10 ** ** F3 0F 5A C0 F3 0F 10 ** ** F3)
registersymbol(AriannaStaminaRead1AOB)

alloc(newmem,2048,AriannaStaminaRead1AOB+5) //Arianna:UpdateBreathless+1dd)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm1,[rsi+58]
movss [rsi+5c],xmm1

originalcode:
movss xmm0,[rsi+5C]

exit:
jmp returnhere

///

AriannaStaminaRead1AOB+5: //Arianna:UpdateBreathless+1dd:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
AriannaStaminaRead1AOB+5: //Arianna:UpdateBreathless+1dd:
db F3 0F 10 46 5C
//Alt: movss xmm0,[rsi+5C]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>113</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
Teseo:BlockAttack+d4:
db EB


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
Teseo:BlockAttack+d4:
db 7A
//Alt: jp
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>114</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
Teseo:BlockAttack+f8:
db EB 10


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
Teseo:BlockAttack+f8:
db 75 08
//Alt: jne Teseo:BlockAttack+102
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>115</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
Teseo:BlockAttack+22f:
db 90 90 90 90 90 90
db 90 90 90 90 90 90


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
Teseo:BlockAttack+22f:
db 0F 8A CE 01 00 00
db 0F 87 C8 01 00 00
//Alt: jp Teseo:BlockAttack+403
//Alt: ja Teseo:BlockAttack+403
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>116</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
Teseo:BlockAttack+2dd:
db 90 90 90 90 EB 15


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
Teseo:BlockAttack+2dd:
db 0F 84 68 00 00 00
//Alt: je Teseo:BlockAttack+34b
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>117</ID>
          <Description>"adr"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,iMeleeManager:AttackInDefenseRange) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
push rbp
mov rbp,rsp
push rsi

exit:
jmp returnhere

///

iMeleeManager:AttackInDefenseRange:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
iMeleeManager:AttackInDefenseRange:
db 55 48 8B EC 56
//Alt: push rbp
//Alt: mov rbp,rsp
//Alt: push rsi
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>118</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,Invector:vThirdPersonMotor:UpdateMotor+51) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,1
jmp exit

originalcode:
movzx eax,byte ptr [rsi+0000008A]

exit:
jmp returnhere

///

Invector:vThirdPersonMotor:UpdateMotor+51:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
Invector:vThirdPersonMotor:UpdateMotor+51:
db 0F B6 86 8A 00 00 00
//Alt: movzx eax,byte ptr [rsi+0000008A]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>119</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,Invector:vThirdPersonAnimator:ATK_DEF_Animation+136) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov r8d,1
jmp exit

originalcode:
movzx r8d,byte ptr [rsi+0000008A]

exit:
jmp returnhere

///

Invector:vThirdPersonAnimator:ATK_DEF_Animation+136:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
Invector:vThirdPersonAnimator:ATK_DEF_Animation+136:
db 44 0F B6 86 8A 00 00 00
//Alt: movzx r8d,byte ptr [rsi+0000008A]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>120</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

alloc(newmem,2048,Teseo:OnAttackEnter+37) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push rax
push rcx
push rdx
push r11

db 48 8B 87
readmem(defenseInputChkAOB+3,38)

pop r11
pop rdx
pop rcx
pop rax
jz @f
jmp exit

originalcode:
movzx eax,byte ptr [rax+74]
test eax,eax

exit:
jmp returnhere

///

Teseo:OnAttackEnter+37:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
Teseo:OnAttackEnter+37:
db 0F B6 40 74 85 C0
//Alt: movzx eax,byte ptr [rax+74]
//Alt: test eax,eax
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>121</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,Teseo:GetAttackStaminaCost+37) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push rax
push rcx
push rdx
push r11

readmem(defenseInputChkAOB,41)

pop r11
pop rdx
pop rcx
pop rax
jz @f
jmp exit

originalcode:
movzx eax,byte ptr [rax+74]
test eax,eax

exit:
jmp returnhere

///

Teseo:GetAttackStaminaCost+37:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
Teseo:GetAttackStaminaCost+37:
db 0F B6 40 74 85 C0
//Alt: movzx eax,byte ptr [rax+74]
//Alt: test eax,eax
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>123</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanregion(attackMoveSetReadOnNormalAttackAOB,Teseo:NormalAttack,Teseo:NormalAttack+196,4C 63 ** ** ** ** ** 48 8B C8 )
registersymbol(attackMoveSetReadOnNormalAttackAOB)

label(bAttackMoveSetFullOverride)
registersymbol(bAttackMoveSetFullOverride)

alloc(newmem,2048,attackMoveSetReadOnNormalAttackAOB) //Teseo:NormalAttack+f5)
label(returnhere)
label(originalcode_altmoveset)
registersymbol(originalcode_altmoveset)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push rax
push r11

readmem(defenseInputChkAOB,39)
mov r8,eax

pop r11
pop rax

mov rcx,bAttackMoveSetFullOverride
cmp byte ptr [rcx],1
je exit
test r8,r8
jnz exit

originalcode_altmoveset:
readmem(attackMoveSetReadOnNormalAttackAOB,7)
//movsxd  r8,dword ptr [rdi+000001BC]

exit:
jmp returnhere

///
bAttackMoveSetFullOverride:
dd 0
///

attackMoveSetReadOnNormalAttackAOB: //Teseo:NormalAttack+f5:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
attackMoveSetReadOnNormalAttackAOB: //Teseo:NormalAttack+f5:
readmem(originalcode_altmoveset,7)
//db 4C 63 87 BC 01 00 00
//Alt: movsxd  r8,dword ptr [rdi+000001BC]

unregistersymbol(originalcode_altmoveset)
unregistersymbol(bAttackMoveSetFullOverride)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>124</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanregion(attackMoveSetReadOnHeavyAttackAOB,Teseo:HeavyAttack,Teseo:HeavyAttack+19c,4C 63 ** ** ** ** ** 48 8B C8 )
registersymbol(attackMoveSetReadOnHeavyAttackAOB)

alloc(newmem2,2048,attackMoveSetReadOnHeavyAttackAOB) //Teseo:HeavyAttack+fb)
label(returnhere2)
label(originalcode2_altmoveset)
registersymbol(originalcode2_altmoveset)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push rax
push r11

readmem(defenseInputChkAOB,39)
mov r8,eax

pop r11
pop rax

mov rcx,bAttackMoveSetFullOverride
cmp byte ptr [rcx],1
je exit2
test r8,r8
jnz exit2

originalcode2_altmoveset:
readmem(attackMoveSetReadOnHeavyAttackAOB,7)
//movsxd  r8,dword ptr [rdi+000001BC]

exit2:
jmp returnhere2

///

attackMoveSetReadOnHeavyAttackAOB: //Teseo:HeavyAttack+fb:
jmp newmem2
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
attackMoveSetReadOnHeavyAttackAOB: //Teseo:HeavyAttack+fb:
readmem(originalcode2_altmoveset,7)
//db 4C 63 87 BC 01 00 00
//Alt: movsxd  r8,dword ptr [rdi+000001BC]

unregistersymbol(originalcode2_altmoveset)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>iCSkillKey1</Name>
      <Address>0B4F00C0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iCSkillKey2</Name>
      <Address>0B4F00C8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iCSkillKey3</Name>
      <Address>0B4F00D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>somereadAOB</Name>
      <Address>01377C3C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInfDoubleJump</Name>
      <Address>0D230091</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHeroOtherInfo</Name>
      <Address>0D230095</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>somesubAOB</Name>
      <Address>012F48E1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>somewritezeroAOB</Name>
      <Address>012F4DB4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>someread2AOB</Name>
      <Address>01377C24</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iCSkillKey</Name>
      <Address>0D260082</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iCSkill1</Name>
      <Address>0D260086</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iCSkill2</Name>
      <Address>0D26008A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iCSkill3</Name>
      <Address>0D26008E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>playerhpreadAOB</Name>
      <Address>00F97CAC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>shantaehpreadAOB</Name>
      <Address>01297CAC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>moneyreadAOB</Name>
      <Address>012B246A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>monkeyhpreadAOB</Name>
      <Address>01278120</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>elephanthpreadAOB</Name>
      <Address>01244E05</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mermaidhpreadAOB</Name>
      <Address>012748EB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHeroCal</Name>
      <Address>04E70082</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMoney</Name>
      <Address>04E70086</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iHPOffset</Name>
      <Address>00F97CB5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iHPOffset2</Name>
      <Address>00F97CBE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hpsubprocessAOB</Name>
      <Address>01249292</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hpfallsubchkAOB</Name>
      <Address>0128AFD9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bOneHitKill</Name>
      <Address>04E90095</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mpreadAOB</Name>
      <Address>0128ADBD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMP</Name>
      <Address>04EA0022</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>begin</Name>
      <Address>012B3348</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobMaxWeightCalculator_r</Name>
      <Address>010209B4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bEnableMaxWeightMod</Name>
      <Address>06640000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fMaxWeightMod</Name>
      <Address>06640004</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fTemp</Name>
      <Address>06640039</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>begin5</Name>
      <Address>011CDC9F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>coold</Name>
      <Address>03640024</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>begin1</Name>
      <Address>01634C16</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hero</Name>
      <Address>0BD1008F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHeroInfo</Name>
      <Address>05F001FC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pRecurit</Name>
      <Address>05F00214</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pRecuritInfo</Name>
      <Address>05F0021C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>generaltargetmagicmaxrangereachedjmpAOB</Name>
      <Address>00ADED55</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cameraanglereadAOB</Name>
      <Address>01510C08</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fCustomCameraAngle</Name>
      <Address>0AD40015</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mousecordxwriteAOB</Name>
      <Address>0153F466</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>areamagicmaxrangereadAOB</Name>
      <Address>014EB5A2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iSummonMaxRangeOffset1</Name>
      <Address>014EB584</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iSummonMaxRangeOffset2</Name>
      <Address>014EB58C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableGMD</Name>
      <Address>1A1801DC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMAP</Name>
      <Address>1A1801E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMID</Name>
      <Address>1A1801E4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMHG</Name>
      <Address>1A1801E8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMCD</Name>
      <Address>1A1801EC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iID</Name>
      <Address>1A1801F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHero</Name>
      <Address>1A180200</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSel</Name>
      <Address>1A180204</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pItem</Name>
      <Address>1A180208</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pLastR</Name>
      <Address>1A18020C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pLastR1</Name>
      <Address>1A180210</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pWeapon</Name>
      <Address>1A180214</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobGMDR</Name>
      <Address>015DC423</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobMAPR</Name>
      <Address>015DCDC1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobMIDY</Name>
      <Address>0180A610</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobFHUS</Name>
      <Address>016834C1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobMLIM</Name>
      <Address>016D7224</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobMHGD</Name>
      <Address>0168A51F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobMSUT</Name>
      <Address>015CD730</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobMOCD</Name>
      <Address>0167AF15</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>itemquantityreadonuseAOB</Name>
      <Address>016D6B10</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pUsedItem</Name>
      <Address>19F90087</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>levelcheck1AOB</Name>
      <Address>017C803D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mousecordxreadwhencastingAOB</Name>
      <Address>0140FCB0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mousecordxreadwhencasting2AOB</Name>
      <Address>014EB1F2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bAreaMagicMaxRangeIgnored</Name>
      <Address>19FB0085</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bIsCasting</Name>
      <Address>19FB0086</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fMyMagicMaxRange</Name>
      <Address>19FB0087</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fMyMagicMaxRange3</Name>
      <Address>19FB008B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMouseCord1b</Name>
      <Address>19FB008F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>selectedplayercordxreadAOB</Name>
      <Address>013FFD4C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSelCord</Name>
      <Address>19FC0027</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMouseCord1</Name>
      <Address>19FC002B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMouseCord2</Name>
      <Address>19FC002F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cameracordreadAOB</Name>
      <Address>014BE8FF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>camerahorianglereadAOB</Name>
      <Address>014C0B91</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>zoommaxcheckAOB</Name>
      <Address>014BEB83</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>somestandardmultiplierreadAOB</Name>
      <Address>019EFE2B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCamera</Name>
      <Address>19FD0013</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iCameraXOffset</Name>
      <Address>014BE901</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iCameraZoomOffset</Name>
      <Address>014BEB8B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iCameraHorizontalAngleOffset</Name>
      <Address>014C0B93</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iSomeMultiplier1</Name>
      <Address>019EFE2D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>travelmagicmaxrangereadAOB</Name>
      <Address>014DEA19</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>travelmagicblockedjmpAOB</Name>
      <Address>014DEADB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>teleportmagicgettargetmaxrangenotreachedjmpAOB</Name>
      <Address>014EAB99</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>teleportmagicgettargetblockedjmpAOB</Name>
      <Address>014EAB05</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>teleportmagicgettargetmaxrangereachedjmponselectAOB</Name>
      <Address>014E98DC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>teleportmagictravelmaxrangenotreachedjmpAOB</Name>
      <Address>014EAF65</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>teleportmagictravelblockedjmpAOB</Name>
      <Address>014EAFEB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>teleportmagicgettargetnotvisiblesetAOB</Name>
      <Address>014EACEE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>teleportmagicgettargetobjmaxrangenotreachedjmpAOB</Name>
      <Address>014EAC3A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>linemagicmaxrangereachedjmp2AOB</Name>
      <Address>014D6262</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>linemagicmaxrangenotreachedjmp3AOB</Name>
      <Address>014D444B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>linemagicmaxrangereachedjmp1AOB</Name>
      <Address>014D48E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>linemagicmaxrangereachedjmp3AOB</Name>
      <Address>014D43F2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>linemagicvisiblecheckAOB</Name>
      <Address>014D4361</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iLineMagicMaxRangeReachedFlag</Name>
      <Address>014D4447</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>rusnmagicmaxrangereachedjmpAOB</Name>
      <Address>014EC5B4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>generaltargetmagic1maxrangereachedjmp1AOB</Name>
      <Address>014D2A76</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>generaltargetmagic1maxrangereachedjmp2AOB</Name>
      <Address>014D3645</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>generaltargetmagic1notvisibleset2AOB</Name>
      <Address>014D35D2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>generaltargetmagic2maxrangeread1AOB</Name>
      <Address>014E73DF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>generaltargetmagic2maxrangereachedjmp2AOB</Name>
      <Address>014E6CC9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>generaltargetmagic2notvisibleset2AOB</Name>
      <Address>014E6C56</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>lightningstrikemaxrangenotreachedjmpAOB</Name>
      <Address>014E4365</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>lightningstrikeinvisiblejmpAOB</Name>
      <Address>014E432C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>lightningstrikenotblockedjmpAOB</Name>
      <Address>014E4439</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>summonmaxrangereachedjmpAOB</Name>
      <Address>014CEBAE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>summonblockedjmpAOB</Name>
      <Address>014CEC37</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>smokescreenmaxrangenotreachedjmpAOB</Name>
      <Address>014DFFF7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>meteormaxrangechk1AOB</Name>
      <Address>014D9494</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>meteormaxrangechk2AOB</Name>
      <Address>014DAA60</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>meteormaxrangechk3AOB</Name>
      <Address>014D8F3C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>icewallmaxrangechkAOB</Name>
      <Address>014DC565</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>icewallblockedjmpAOB</Name>
      <Address>014DC52A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>massmagicvisuallmaxrangechkAOB</Name>
      <Address>014E717F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>areamagicmaxrangewritefinalAOB</Name>
      <Address>01707DC4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>arcmagicrangereadAOB</Name>
      <Address>014D14D6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>arcmagicrangereadfinalAOB</Name>
      <Address>016F145B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fMaxRangeMultiplier</Name>
      <Address>17D80056</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cameracordread2AOB</Name>
      <Address>014BE91B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fCustomHoriAngleChangeInterval</Name>
      <Address>17DA014D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bTurnReverse</Name>
      <Address>17DA015A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bShiftZoom</Name>
      <Address>17DC0051</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fCustomZoomMax</Name>
      <Address>17DC0052</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fZoomOutMax</Name>
      <Address>01CC59C8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>last_item_moved</Name>
      <Address>1408AE77B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>last_item_moved_ptr</Name>
      <Address>13F8D0021</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>full_durability</Name>
      <Address>1409836FD</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Structures StructVersion="2">
    <Structure Name="BlackMedallion" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="24" Vartype="Pointer" Bytesize="8" Description="levelsEnergy" DisplayMethod="Unsigned Integer">
          <Structure Name="Int32[]" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="12" Vartype="4 Bytes" Bytesize="4" Description="Count" DisplayMethod="Unsigned Integer"/>
              <Element Offset="16" Vartype="Pointer" Bytesize="8" Description="Item[0]" DisplayMethod="Unsigned Integer">
                <Structure Name="System.Int32" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
                  <Elements>
                    <Element Offset="16" Vartype="4 Bytes" Bytesize="4" Description="m_value" DisplayMethod="Unsigned Integer"/>
                  </Elements>
                </Structure>
              </Element>
              <Element Offset="24" Vartype="Pointer" Bytesize="8" Description="Item[1]" DisplayMethod="Unsigned Integer">
                <Structure Name="System.Int32" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
                  <Elements>
                    <Element Offset="16" Vartype="4 Bytes" Bytesize="4" Description="m_value" DisplayMethod="Unsigned Integer"/>
                  </Elements>
                </Structure>
              </Element>
              <Element Offset="32" Vartype="Pointer" Bytesize="8" Description="Item[2]" DisplayMethod="Unsigned Integer">
                <Structure Name="System.Int32" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
                  <Elements>
                    <Element Offset="16" Vartype="4 Bytes" Bytesize="4" Description="m_value" DisplayMethod="Unsigned Integer"/>
                  </Elements>
                </Structure>
              </Element>
              <Element Offset="40" Vartype="Pointer" Bytesize="8" Description="Item[3]" DisplayMethod="Unsigned Integer">
                <Structure Name="System.Int32" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
                  <Elements>
                    <Element Offset="16" Vartype="4 Bytes" Bytesize="4" Description="m_value" DisplayMethod="Unsigned Integer"/>
                  </Elements>
                </Structure>
              </Element>
              <Element Offset="48" Vartype="Pointer" Bytesize="8" Description="Item[4]" DisplayMethod="Unsigned Integer">
                <Structure Name="System.Int32" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
                  <Elements>
                    <Element Offset="16" Vartype="4 Bytes" Bytesize="4" Description="m_value" DisplayMethod="Unsigned Integer"/>
                  </Elements>
                </Structure>
              </Element>
              <Element Offset="56" Vartype="Pointer" Bytesize="8" Description="Item[5]" DisplayMethod="Unsigned Integer">
                <Structure Name="System.Int32" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
                  <Elements>
                    <Element Offset="16" Vartype="4 Bytes" Bytesize="4" Description="m_value" DisplayMethod="Unsigned Integer"/>
                  </Elements>
                </Structure>
              </Element>
              <Element Offset="64" Vartype="Pointer" Bytesize="8" Description="Item[6]" DisplayMethod="Unsigned Integer">
                <Structure Name="System.Int32" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
                  <Elements>
                    <Element Offset="16" Vartype="4 Bytes" Bytesize="4" Description="m_value" DisplayMethod="Unsigned Integer"/>
                  </Elements>
                </Structure>
              </Element>
              <Element Offset="72" Vartype="Pointer" Bytesize="8" Description="Item[7]" DisplayMethod="Unsigned Integer">
                <Structure Name="System.Int32" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
                  <Elements>
                    <Element Offset="16" Vartype="4 Bytes" Bytesize="4" Description="m_value" DisplayMethod="Unsigned Integer"/>
                  </Elements>
                </Structure>
              </Element>
              <Element Offset="80" Vartype="Pointer" Bytesize="8" Description="Item[8]" DisplayMethod="Unsigned Integer">
                <Structure Name="System.Int32" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
                  <Elements>
                    <Element Offset="16" Vartype="4 Bytes" Bytesize="4" Description="m_value" DisplayMethod="Unsigned Integer"/>
                  </Elements>
                </Structure>
              </Element>
              <Element Offset="88" Vartype="Pointer" Bytesize="8" Description="Item[9]" DisplayMethod="Unsigned Integer">
                <Structure Name="System.Int32" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
                  <Elements>
                    <Element Offset="16" Vartype="4 Bytes" Bytesize="4" Description="m_value" DisplayMethod="Unsigned Integer"/>
                  </Elements>
                </Structure>
              </Element>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="32" Vartype="Pointer" Bytesize="8" Description="boostEffect" DisplayMethod="Unsigned Integer">
          <Structure Name="AttackBoost" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="24" Vartype="Pointer" Bytesize="8" Description="meshPlayer" DisplayMethod="Unsigned Integer"/>
              <Element Offset="32" Vartype="Pointer" Bytesize="8" Description="meshForearm" DisplayMethod="Unsigned Integer"/>
              <Element Offset="40" Vartype="Pointer" Bytesize="8" Description="meshHelm" DisplayMethod="Unsigned Integer"/>
              <Element Offset="48" Vartype="Pointer" Bytesize="8" Description="meshBootLeft" DisplayMethod="Unsigned Integer"/>
              <Element Offset="56" Vartype="Pointer" Bytesize="8" Description="meshBootRight" DisplayMethod="Unsigned Integer"/>
              <Element Offset="64" Vartype="Pointer" Bytesize="8" Description="meshCape1" DisplayMethod="Unsigned Integer"/>
              <Element Offset="72" Vartype="Pointer" Bytesize="8" Description="meshCape2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="80" Vartype="Pointer" Bytesize="8" Description="meshPlatok" DisplayMethod="Unsigned Integer"/>
              <Element Offset="88" Vartype="Pointer" Bytesize="8" Description="meshShulder" DisplayMethod="Unsigned Integer"/>
              <Element Offset="96" Vartype="Pointer" Bytesize="8" Description="originalMaterial" DisplayMethod="Unsigned Integer"/>
              <Element Offset="104" Vartype="Pointer" Bytesize="8" Description="originalMaterialForearm" DisplayMethod="Unsigned Integer"/>
              <Element Offset="112" Vartype="Pointer" Bytesize="8" Description="originalMaterialHelm" DisplayMethod="Unsigned Integer"/>
              <Element Offset="120" Vartype="Pointer" Bytesize="8" Description="originalMaterialBoots" DisplayMethod="Unsigned Integer"/>
              <Element Offset="128" Vartype="Pointer" Bytesize="8" Description="originalMaterialCape1" DisplayMethod="Unsigned Integer"/>
              <Element Offset="136" Vartype="Pointer" Bytesize="8" Description="originalMaterialCape2" DisplayMethod="Unsigned Integer"/>
              <Element Offset="144" Vartype="Pointer" Bytesize="8" Description="originalMaterialPlatok" DisplayMethod="Unsigned Integer"/>
              <Element Offset="152" Vartype="Pointer" Bytesize="8" Description="originalMaterialShulder" DisplayMethod="Unsigned Integer"/>
              <Element Offset="160" Vartype="Pointer" Bytesize="8" Description="boostMaterial" DisplayMethod="Unsigned Integer"/>
              <Element Offset="168" Vartype="Pointer" Bytesize="8" Description="boostStart" DisplayMethod="Unsigned Integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="40" Vartype="Pointer" Bytesize="8" Description="healEffect" DisplayMethod="Unsigned Integer">
          <Structure Name="HealEffect" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="24" Vartype="Pointer" Bytesize="8" Description="particles" DisplayMethod="Unsigned Integer"/>
              <Element Offset="32" Vartype="Pointer" Bytesize="8" Description="sfx" DisplayMethod="Unsigned Integer"/>
              <Element Offset="40" Vartype="Pointer" Bytesize="8" Description="audioSource" DisplayMethod="Unsigned Integer"/>
              <Element Offset="48" Vartype="Float" Bytesize="4" Description="duration" DisplayMethod="Unsigned Integer"/>
              <Element Offset="52" Vartype="Float" Bytesize="4" Description="sfxStartTime" DisplayMethod="Unsigned Integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="48" Vartype="Pointer" Bytesize="8" Description="levelUpEffect" DisplayMethod="Unsigned Integer">
          <Structure Name="Interactor" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="32" Vartype="Pointer" Bytesize="8" Description="animationEvents" DisplayMethod="Unsigned Integer"/>
              <Element Offset="40" Vartype="Pointer" Bytesize="8" Description="mecanimEvents" DisplayMethod="Unsigned Integer"/>
              <Element Offset="48" Vartype="Pointer" Bytesize="8" Description="particleEvents" DisplayMethod="Unsigned Integer"/>
              <Element Offset="56" Vartype="Pointer" Bytesize="8" Description="audioEvents" DisplayMethod="Unsigned Integer"/>
              <Element Offset="64" Vartype="Pointer" Bytesize="8" Description="shakeEvents" DisplayMethod="Unsigned Integer"/>
              <Element Offset="72" Vartype="Pointer" Bytesize="8" Description="slowmoEvents" DisplayMethod="Unsigned Integer"/>
              <Element Offset="80" Vartype="Pointer" Bytesize="8" Description="messages" DisplayMethod="Unsigned Integer"/>
              <Element Offset="88" Vartype="Pointer" Bytesize="8" Description="activations" DisplayMethod="Unsigned Integer"/>
              <Element Offset="96" Vartype="Pointer" Bytesize="8" Description="teleports" DisplayMethod="Unsigned Integer"/>
              <Element Offset="104" Vartype="Pointer" Bytesize="8" Description="moveObject" DisplayMethod="Unsigned Integer"/>
              <Element Offset="112" Vartype="Pointer" Bytesize="8" Description="rotateObject" DisplayMethod="Unsigned Integer"/>
              <Element Offset="120" Vartype="Pointer" Bytesize="8" Description="rotateTo" DisplayMethod="Unsigned Integer"/>
              <Element Offset="128" Vartype="Pointer" Bytesize="8" Description="IKObjects" DisplayMethod="Unsigned Integer"/>
              <Element Offset="136" Vartype="Pointer" Bytesize="8" Description="scaleObject" DisplayMethod="Unsigned Integer"/>
              <Element Offset="144" Vartype="Pointer" Bytesize="8" Description="timelinePlayer" DisplayMethod="Unsigned Integer"/>
              <Element Offset="152" Vartype="4 Bytes" Bytesize="4" Description="stopMode" DisplayMethod="Unsigned Integer"/>
              <Element Offset="156" Vartype="Byte" Bytesize="1" Description="isCinematic" DisplayMethod="Unsigned Integer"/>
              <Element Offset="157" Vartype="Byte" Bytesize="1" Description="resetArianna" DisplayMethod="Unsigned Integer"/>
              <Element Offset="158" Vartype="Byte" Bytesize="1" Description="resetPlayer" DisplayMethod="Unsigned Integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="56" Vartype="Pointer" Bytesize="8" Description="accumulatedEnergy" DisplayMethod="Unsigned Integer">
          <Structure Name="VariantValue" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="16" Vartype="Pointer" Bytesize="8" Description="_object" DisplayMethod="Unsigned Integer"/>
              <Element Offset="24" Vartype="Pointer" Bytesize="8" ChildStruct="String" Description="_string" DisplayMethod="Unsigned Integer"/>
              <Element Offset="32" Vartype="4 Bytes" Bytesize="4" Description="type" DisplayMethod="Unsigned Integer"/>
              <Element Offset="36" Vartype="4 Bytes" Bytesize="4" Description="_int" DisplayMethod="Unsigned Integer"/>
              <Element Offset="40" Vartype="Float" Bytesize="4" Description="_float" DisplayMethod="Unsigned Integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="64" Vartype="Pointer" Bytesize="8" Description="player" DisplayMethod="Unsigned Integer">
          <Structure Name="Teseo" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="632" Vartype="Pointer" Bytesize="8" Description="playerInput" DisplayMethod="Unsigned Integer">
                <Structure Name="vThirdPersonInput" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
                  <Elements>
                    <Element Offset="24" Vartype="Pointer" Bytesize="8" Description="controller" DisplayMethod="Unsigned Integer">
                      <Structure Name="ControllerManager" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
                        <Elements>
                          <Element Offset="24" Vartype="Pointer" Bytesize="8" Description="_rewiredPlayer" DisplayMethod="Unsigned Integer"/>
                          <Element Offset="32" Vartype="Pointer" Bytesize="8" Description="onInputTypeChanged" DisplayMethod="Unsigned Integer"/>
                          <Element Offset="40" Vartype="4 Bytes" Bytesize="4" Description="inputType" DisplayMethod="Unsigned Integer"/>
                          <Element Offset="44" Vartype="4 Bytes" Bytesize="4" Description="playerID" DisplayMethod="Unsigned Integer"/>
                          <Element Offset="48" Vartype="4 Bytes" Bytesize="4" Description="skipFrameOnReset" DisplayMethod="Unsigned Integer"/>
                          <Element Offset="52" Vartype="4 Bytes" Bytesize="4" Description="inputChanged" DisplayMethod="Unsigned Integer"/>
                          <Element Offset="56" Vartype="4 Bytes" Bytesize="4" Description="skipInput" DisplayMethod="Unsigned Integer"/>
                        </Elements>
                      </Structure>
                    </Element>
                    <Element Offset="32" Vartype="Byte" Bytesize="1" Description="enablePlayerControls" DisplayMethod="Unsigned Integer"/>
                  </Elements>
                </Structure>
              </Element>
              <Element Offset="640" Vartype="Pointer" Bytesize="8" Description="interactionSystem" DisplayMethod="Unsigned Integer"/>
              <Element Offset="648" Vartype="Pointer" Bytesize="8" Description="handsIK" DisplayMethod="Unsigned Integer"/>
              <Element Offset="656" Vartype="Pointer" Bytesize="8" Description="lookAt" DisplayMethod="Unsigned Integer"/>
              <Element Offset="664" Vartype="Pointer" Bytesize="8" Description="bleeding" DisplayMethod="Unsigned Integer"/>
              <Element Offset="672" Vartype="Pointer" Bytesize="8" Description="blackMedallion" DisplayMethod="Unsigned Integer"/>
              <Element Offset="680" Vartype="Pointer" Bytesize="8" Description="auraBonus" DisplayMethod="Unsigned Integer"/>
              <Element Offset="688" Vartype="Pointer" Bytesize="8" Description="reactionTable" DisplayMethod="Unsigned Integer"/>
              <Element Offset="696" Vartype="Pointer" Bytesize="8" Description="capes" DisplayMethod="Unsigned Integer">
                <Structure Name="CharacterCapes" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
                  <Elements>
                    <Element Offset="16" Vartype="Pointer" Bytesize="8" Description="cape1" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="24" Vartype="Pointer" Bytesize="8" Description="cape2" DisplayMethod="Unsigned Integer"/>
                  </Elements>
                </Structure>
              </Element>
              <Element Offset="704" Vartype="Pointer" Bytesize="8" Description="&lt;companion&gt;k__BackingField" DisplayMethod="Unsigned Integer">
                <Structure Name="Arianna" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
                  <Elements>
                    <Element Offset="200" Vartype="Pointer" Bytesize="8" Description="ariannaLightSource" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="208" Vartype="Pointer" Bytesize="8" Description="lookAt" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="216" Vartype="Pointer" Bytesize="8" Description="ikHands" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="224" Vartype="Pointer" Bytesize="8" Description="staminaConsumeSpeed" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="232" Vartype="Pointer" Bytesize="8" Description="dementorsCircle" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="240" Vartype="Pointer" Bytesize="8" Description="rigidBody" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="248" Vartype="Pointer" Bytesize="8" Description="agent" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="256" Vartype="Pointer" Bytesize="8" Description="interestSensor" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="264" Vartype="Pointer" Bytesize="8" Description="sounds" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="272" Vartype="Pointer" Bytesize="8" Description="interestObject" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="280" Vartype="Pointer" Bytesize="8" Description="gotoDestination" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="288" Vartype="Pointer" Bytesize="8" Description="currentJail" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="296" Vartype="Pointer" Bytesize="8" Description="&lt;companion&gt;k__BackingField" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="304" Vartype="Pointer" Bytesize="8" Description="&lt;respawnPoint&gt;k__BackingField" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="312" Vartype="Pointer" Bytesize="8" Description="ariannaActions" DisplayMethod="Unsigned Integer">
                      <Structure Name="Dictionary`2" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
                        <Elements>
                          <Element Offset="16" Vartype="Pointer" Bytesize="8" Description="table" DisplayMethod="Unsigned Integer"/>
                          <Element Offset="24" Vartype="Pointer" Bytesize="8" Description="linkSlots" DisplayMethod="Unsigned Integer"/>
                          <Element Offset="32" Vartype="Pointer" Bytesize="8" Description="keySlots" DisplayMethod="Unsigned Integer"/>
                          <Element Offset="40" Vartype="Pointer" Bytesize="8" Description="valueSlots" DisplayMethod="Unsigned Integer"/>
                          <Element Offset="48" Vartype="4 Bytes" Bytesize="4" Description="touchedSlots" DisplayMethod="Unsigned Integer"/>
                          <Element Offset="52" Vartype="4 Bytes" Bytesize="4" Description="emptySlot" DisplayMethod="Unsigned Integer"/>
                          <Element Offset="56" Vartype="4 Bytes" Bytesize="4" Description="count" DisplayMethod="Unsigned Integer"/>
                          <Element Offset="60" Vartype="4 Bytes" Bytesize="4" Description="threshold" DisplayMethod="Unsigned Integer"/>
                          <Element Offset="64" Vartype="Pointer" Bytesize="8" Description="hcp" DisplayMethod="Unsigned Integer"/>
                          <Element Offset="72" Vartype="Pointer" Bytesize="8" Description="serialization_info" DisplayMethod="Unsigned Integer"/>
                          <Element Offset="80" Vartype="4 Bytes" Bytesize="4" Description="generation" DisplayMethod="Unsigned Integer"/>
                        </Elements>
                      </Structure>
                    </Element>
                    <Element Offset="320" Vartype="Pointer" Bytesize="8" Description="currentAction" DisplayMethod="Unsigned Integer">
                      <Structure Name="FollowAction" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
                        <Elements>
                          <Element Offset="16" Vartype="Byte" Bytesize="1" Description="hasMoved" DisplayMethod="Unsigned Integer"/>
                          <Element Offset="20" Vartype="4 Bytes" Bytesize="4" Description="lastTargetPosition" DisplayMethod="Unsigned Integer"/>
                          <Element Offset="32" Vartype="4 Bytes" Bytesize="4" Description="direction" DisplayMethod="Unsigned Integer"/>
                          <Element Offset="44" Vartype="Float" Bytesize="4" Description="distance" DisplayMethod="Unsigned Integer"/>
                        </Elements>
                      </Structure>
                    </Element>
                    <Element Offset="328" Vartype="Pointer" Bytesize="8" Description="&lt;sunRay&gt;k__BackingField" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="336" Vartype="4 Bytes" Bytesize="4" Description="groundLayer" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="340" Vartype="4 Bytes" Bytesize="4" Description="obstacleLayer" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="344" Vartype="Float" Bytesize="4" Description="groundMinDist" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="348" Vartype="Float" Bytesize="4" Description="airborneThreshold" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="352" Vartype="Byte" Bytesize="1" Description="agentUpdatePos" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="356" Vartype="4 Bytes" Bytesize="4" Description="animState" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="364" Vartype="Float" Bytesize="4" Description="smoothSpeed" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="368" Vartype="Float" Bytesize="4" Description="kp" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="372" Vartype="Float" Bytesize="4" Description="ki" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="376" Vartype="Float" Bytesize="4" Description="ka" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="380" Vartype="Float" Bytesize="4" Description="windUp" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="384" Vartype="Float" Bytesize="4" Description="controlLo" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="388" Vartype="Float" Bytesize="4" Description="controlHi" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="392" Vartype="Float" Bytesize="4" Description="speedOffset" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="396" Vartype="Float" Bytesize="4" Description="runExtraSpeed" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="400" Vartype="Float" Bytesize="4" Description="extraSpeed" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="404" Vartype="Float" Bytesize="4" Description="chaseSpeed" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="408" Vartype="Float" Bytesize="4" Description="moveToSpeed" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="412" Vartype="Float" Bytesize="4" Description="moveToStopDistance" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="416" Vartype="Float" Bytesize="4" Description="followStopDistance" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="420" Vartype="Float" Bytesize="4" Description="followDistance" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="424" Vartype="Float" Bytesize="4" Description="deltaBeforeMove" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="428" Vartype="Float" Bytesize="4" Description="arrivalRadius" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="432" Vartype="Float" Bytesize="4" Description="enemySenseRange" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="436" Vartype="Float" Bytesize="4" Description="timeToCampfire" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="440" Vartype="Float" Bytesize="4" Description="moveToCampfireDist" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="444" Vartype="Float" Bytesize="4" Description="distanceBeforeFollow" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="448" Vartype="4 Bytes" Bytesize="4" Description="maxLightGlobes" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="452" Vartype="4 Bytes" Bytesize="4" Description="lightGlobes" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="456" Vartype="Float" Bytesize="4" Description="lightIntensity" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="460" Vartype="Float" Bytesize="4" Description="lightRange" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="464" Vartype="Float" Bytesize="4" Description="rightOffset" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="468" Vartype="Float" Bytesize="4" Description="backOffset" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="472" Vartype="Float" Bytesize="4" Description="handByHandStartDistance" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="476" Vartype="Float" Bytesize="4" Description="handByHandMaxDistance" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="480" Vartype="Float" Bytesize="4" Description="handbyHandExtraSpeed" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="484" Vartype="Float" Bytesize="4" Description="smoothedAverage" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="488" Vartype="Float" Bytesize="4" Description="hugSnapDist" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="492" Vartype="Float" Bytesize="4" Description="safeGrabDistance" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="496" Vartype="Float" Bytesize="4" Description="MoveThr" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="500" Vartype="Float" Bytesize="4" Description="ClampAlpha" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="504" Vartype="Float" Bytesize="4" Description="HbHAngular" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="508" Vartype="Byte" Bytesize="1" Description="recoverStaminaIfNotMove" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="512" Vartype="Float" Bytesize="4" Description="staminaPerSecond" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="516" Vartype="Float" Bytesize="4" Description="breathnessDuration" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="520" Vartype="Float" Bytesize="4" Description="lifelessTime" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="524" Vartype="Float" Bytesize="4" Description="lifelessRestoreTime" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="528" Vartype="4 Bytes" Bytesize="4" Description="startState" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="532" Vartype="4 Bytes" Bytesize="4" Description="&lt;moveToTarget&gt;k__BackingField" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="544" Vartype="4 Bytes" Bytesize="4" Description="followMode" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="548" Vartype="Byte" Bytesize="1" Description="breathless" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="549" Vartype="Byte" Bytesize="1" Description="crouched" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="550" Vartype="Byte" Bytesize="1" Description="sitdown" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="552" Vartype="4 Bytes" Bytesize="4" Description="kidnapState" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="556" Vartype="Byte" Bytesize="1" Description="forceFollow" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="557" Vartype="Byte" Bytesize="1" Description="rechargingLife" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="558" Vartype="Byte" Bytesize="1" Description="lifeless" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="559" Vartype="Byte" Bytesize="1" Description="waitBonfire" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="560" Vartype="Float" Bytesize="4" Description="aloneTime" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="564" Vartype="Float" Bytesize="4" Description="averagePlayerSpeed" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="568" Vartype="Float" Bytesize="4" Description="lifelessTimer" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="572" Vartype="Float" Bytesize="4" Description="lifelessTimerFactor" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="576" Vartype="4 Bytes" Bytesize="4" Description="safeAreaMask" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="580" Vartype="4 Bytes" Bytesize="4" Description="walkableArea" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="584" Vartype="Float" Bytesize="4" Description="_speedS" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="588" Vartype="Float" Bytesize="4" Description="ie" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="592" Vartype="Float" Bytesize="4" Description="e" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="596" Vartype="Float" Bytesize="4" Description="_smoothedSpeed" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="600" Vartype="Float" Bytesize="4" Description="control" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="604" Vartype="Float" Bytesize="4" Description="fear" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="608" Vartype="Byte" Bytesize="1" Description="insideSafeArea" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="609" Vartype="Byte" Bytesize="1" Description="hasEnemiesNearby" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="612" Vartype="4 Bytes" Bytesize="4" Description="disableFlags" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="616" Vartype="Byte" Bytesize="1" Description="inJail" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="617" Vartype="Byte" Bytesize="1" Description="isRespawn" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="618" Vartype="Byte" Bytesize="1" Description="allowEnemyDamage" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="620" Vartype="4 Bytes" Bytesize="4" Description="companionState" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="624" Vartype="4 Bytes" Bytesize="4" Description="wantedState" DisplayMethod="Unsigned Integer"/>
                  </Elements>
                </Structure>
              </Element>
              <Element Offset="712" Vartype="Pointer" Bytesize="8" Description="&lt;actionHbH&gt;k__BackingField" DisplayMethod="Unsigned Integer"/>
              <Element Offset="720" Vartype="Pointer" Bytesize="8" Description="&lt;actionCarry&gt;k__BackingField" DisplayMethod="Unsigned Integer"/>
              <Element Offset="728" Vartype="Pointer" Bytesize="8" Description="&lt;battleCircle&gt;k__BackingField" DisplayMethod="Unsigned Integer"/>
              <Element Offset="736" Vartype="Pointer" Bytesize="8" Description="&lt;pickedCollectable&gt;k__BackingField" DisplayMethod="Unsigned Integer"/>
              <Element Offset="744" Vartype="4 Bytes" Bytesize="4" Description="inputBuffer" DisplayMethod="Unsigned Integer"/>
              <Element Offset="772" Vartype="4 Bytes" Bytesize="4" Description="maxBaseHp" DisplayMethod="Unsigned Integer"/>
              <Element Offset="776" Vartype="Float" Bytesize="4" Description="maxBaseStamina" DisplayMethod="Unsigned Integer"/>
              <Element Offset="780" Vartype="Byte" Bytesize="1" Description="handByHand" DisplayMethod="Unsigned Integer"/>
              <Element Offset="784" Vartype="4 Bytes" Bytesize="4" Description="rollMoveWindow" DisplayMethod="Unsigned Integer"/>
              <Element Offset="788" Vartype="4 Bytes" Bytesize="4" Description="attackMoveWindow" DisplayMethod="Unsigned Integer"/>
              <Element Offset="792" Vartype="Float" Bytesize="4" Description="blockVibration" DisplayMethod="Unsigned Integer"/>
              <Element Offset="796" Vartype="Float" Bytesize="4" Description="hitVibration" DisplayMethod="Unsigned Integer"/>
              <Element Offset="800" Vartype="Float" Bytesize="4" Description="criticalVibration" DisplayMethod="Unsigned Integer"/>
              <Element Offset="804" Vartype="Float" Bytesize="4" Description="blockVibrationTime" DisplayMethod="Unsigned Integer"/>
              <Element Offset="808" Vartype="Float" Bytesize="4" Description="hitVibrationTime" DisplayMethod="Unsigned Integer"/>
              <Element Offset="812" Vartype="Float" Bytesize="4" Description="criticalVibrationTime" DisplayMethod="Unsigned Integer"/>
              <Element Offset="816" Vartype="4 Bytes" Bytesize="4" Description="shakeOnCritical" DisplayMethod="Unsigned Integer"/>
              <Element Offset="820" Vartype="Float" Bytesize="4" Description="maxCarryDistance" DisplayMethod="Unsigned Integer"/>
              <Element Offset="824" Vartype="Float" Bytesize="4" Description="staminaPerRune" DisplayMethod="Unsigned Integer"/>
              <Element Offset="828" Vartype="4 Bytes" Bytesize="4" Description="maxStaminaRunes" DisplayMethod="Unsigned Integer"/>
              <Element Offset="832" Vartype="4 Bytes" Bytesize="4" Description="&lt;playerActionMask&gt;k__BackingField" DisplayMethod="Unsigned Integer"/>
              <Element Offset="836" Vartype="Byte" Bytesize="1" Description="&lt;actions&gt;k__BackingField" DisplayMethod="Unsigned Integer"/>
              <Element Offset="840" Vartype="4 Bytes" Bytesize="4" Description="wantedRoll" DisplayMethod="Unsigned Integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="72" Vartype="Pointer" Bytesize="8" Description="totalSlots" DisplayMethod="Unsigned Integer">
          <Structure Name="VariantValue" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="16" Vartype="Pointer" Bytesize="8" Description="_object" DisplayMethod="Unsigned Integer"/>
              <Element Offset="24" Vartype="Pointer" Bytesize="8" ChildStruct="String" Description="_string" DisplayMethod="Unsigned Integer"/>
              <Element Offset="32" Vartype="4 Bytes" Bytesize="4" Description="type" DisplayMethod="Unsigned Integer"/>
              <Element Offset="36" Vartype="4 Bytes" Bytesize="4" Description="_int" DisplayMethod="Unsigned Integer"/>
              <Element Offset="40" Vartype="Float" Bytesize="4" Description="_float" DisplayMethod="Unsigned Integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="80" Vartype="Pointer" Bytesize="8" Description="currentLevel" DisplayMethod="Unsigned Integer"/>
        <Element Offset="88" Vartype="4 Bytes" Bytesize="4" Description="maxLevels" DisplayMethod="Unsigned Integer"/>
        <Element Offset="92" Vartype="4 Bytes" Bytesize="4" Description="hpPerPotion" DisplayMethod="Unsigned Integer"/>
        <Element Offset="96" Vartype="Float" Bytesize="4" Description="attackBonus" DisplayMethod="Unsigned Integer"/>
        <Element Offset="100" Vartype="Float" Bytesize="4" Description="damageMalus" DisplayMethod="Unsigned Integer"/>
        <Element Offset="104" Vartype="Float" Bytesize="4" Description="staminaDelayAfterBoost" DisplayMethod="Unsigned Integer"/>
        <Element Offset="108" Vartype="Float" Bytesize="4" Description="staminaConsumeSpeed" DisplayMethod="Unsigned Integer"/>
        <Element Offset="112" Vartype="4 Bytes" Bytesize="4" Description="availableSlots" DisplayMethod="Unsigned Integer"/>
        <Element Offset="116" Vartype="Byte" Bytesize="1" Description="boostMode" DisplayMethod="Unsigned Integer"/>
      </Elements>
    </Structure>
    <Structure Name="String" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="16" Vartype="4 Bytes" Bytesize="4" Description="Length" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20" Vartype="Unicode String" Bytesize="128" Description="Value" DisplayMethod="Unsigned Integer"/>
      </Elements>
    </Structure>
    <Structure Name="IKHands" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="16" Vartype="Pointer" Bytesize="8" Description="leftHandTarget" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24" Vartype="Pointer" Bytesize="8" Description="rightHandTarget" DisplayMethod="Unsigned Integer"/>
        <Element Offset="32" Vartype="Pointer" Bytesize="8" Description="ikHintLeft" DisplayMethod="Unsigned Integer"/>
        <Element Offset="40" Vartype="Pointer" Bytesize="8" Description="ikHintRight" DisplayMethod="Unsigned Integer"/>
        <Element Offset="48" Vartype="Pointer" Bytesize="8" Description="animator" DisplayMethod="Unsigned Integer"/>
        <Element Offset="56" Vartype="Float" Bytesize="4" Description="leftHandWeight" DisplayMethod="Unsigned Integer"/>
        <Element Offset="60" Vartype="Float" Bytesize="4" Description="rightHandWeight" DisplayMethod="Unsigned Integer"/>
        <Element Offset="64" Vartype="Float" Bytesize="4" Description="ikMasterWeight" DisplayMethod="Unsigned Integer"/>
      </Elements>
    </Structure>
  </Structures>
  <Comments>http://fearlessrevolution.com/viewtopic.php?f=4&amp;t=4991
</Comments>
</CheatTable>
